/*
 * Copyright (c) 2021 by the IronCore authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: proto/dpdk.proto

package dpdkproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//// ENUMS
type InterfaceType int32

const (
	InterfaceType_VIRTUAL   InterfaceType = 0
	InterfaceType_BAREMETAL InterfaceType = 1
)

var InterfaceType_name = map[int32]string{
	0: "VIRTUAL",
	1: "BAREMETAL",
}

var InterfaceType_value = map[string]int32{
	"VIRTUAL":   0,
	"BAREMETAL": 1,
}

func (x InterfaceType) String() string {
	return proto.EnumName(InterfaceType_name, int32(x))
}

func (InterfaceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{0}
}

type IpVersion int32

const (
	IpVersion_IPV4 IpVersion = 0
	IpVersion_IPV6 IpVersion = 1
)

var IpVersion_name = map[int32]string{
	0: "IPV4",
	1: "IPV6",
}

var IpVersion_value = map[string]int32{
	"IPV4": 0,
	"IPV6": 1,
}

func (x IpVersion) String() string {
	return proto.EnumName(IpVersion_name, int32(x))
}

func (IpVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{1}
}

type Protocol int32

const (
	Protocol_UNDEFINED Protocol = 0
	Protocol_ICMP      Protocol = 1
	Protocol_TCP       Protocol = 6
	Protocol_UDP       Protocol = 17
	Protocol_ICMPV6    Protocol = 58
	Protocol_SCTP      Protocol = 132
)

var Protocol_name = map[int32]string{
	0:   "UNDEFINED",
	1:   "ICMP",
	6:   "TCP",
	17:  "UDP",
	58:  "ICMPV6",
	132: "SCTP",
}

var Protocol_value = map[string]int32{
	"UNDEFINED": 0,
	"ICMP":      1,
	"TCP":       6,
	"UDP":       17,
	"ICMPV6":    58,
	"SCTP":      132,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}

func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{2}
}

type TrafficDirection int32

const (
	TrafficDirection_INGRESS TrafficDirection = 0
	TrafficDirection_EGRESS  TrafficDirection = 1
)

var TrafficDirection_name = map[int32]string{
	0: "INGRESS",
	1: "EGRESS",
}

var TrafficDirection_value = map[string]int32{
	"INGRESS": 0,
	"EGRESS":  1,
}

func (x TrafficDirection) String() string {
	return proto.EnumName(TrafficDirection_name, int32(x))
}

func (TrafficDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{3}
}

type FirewallAction int32

const (
	FirewallAction_DROP   FirewallAction = 0
	FirewallAction_ACCEPT FirewallAction = 1
)

var FirewallAction_name = map[int32]string{
	0: "DROP",
	1: "ACCEPT",
}

var FirewallAction_value = map[string]int32{
	"DROP":   0,
	"ACCEPT": 1,
}

func (x FirewallAction) String() string {
	return proto.EnumName(FirewallAction_name, int32(x))
}

func (FirewallAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{4}
}

type VniType int32

const (
	VniType_VNI_IPV4 VniType = 0
	VniType_VNI_IPV6 VniType = 1
	VniType_VNI_BOTH VniType = 2
)

var VniType_name = map[int32]string{
	0: "VNI_IPV4",
	1: "VNI_IPV6",
	2: "VNI_BOTH",
}

var VniType_value = map[string]int32{
	"VNI_IPV4": 0,
	"VNI_IPV6": 1,
	"VNI_BOTH": 2,
}

func (x VniType) String() string {
	return proto.EnumName(VniType_name, int32(x))
}

func (VniType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{5}
}

type CaptureInterfaceType int32

const (
	CaptureInterfaceType_SINGLE_PF CaptureInterfaceType = 0
	CaptureInterfaceType_SINGLE_VF CaptureInterfaceType = 1
)

var CaptureInterfaceType_name = map[int32]string{
	0: "SINGLE_PF",
	1: "SINGLE_VF",
}

var CaptureInterfaceType_value = map[string]int32{
	"SINGLE_PF": 0,
	"SINGLE_VF": 1,
}

func (x CaptureInterfaceType) String() string {
	return proto.EnumName(CaptureInterfaceType_name, int32(x))
}

func (CaptureInterfaceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{6}
}

//// STRUCTURES
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Status struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{1}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type IpAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipver   IpVersion `protobuf:"varint,1,opt,name=ipver,proto3,enum=dpdkironcore.v1.IpVersion" json:"ipver,omitempty"`
	Address []byte    `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"` // holds 4 bytes (IpVersion::IPV4) or 16 bytes (IpVersion::IPV6)
}

func (m *IpAddress) Reset()         { *m = IpAddress{} }
func (m *IpAddress) String() string { return proto.CompactTextString(m) }
func (*IpAddress) ProtoMessage()    {}
func (*IpAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{2}
}

func (m *IpAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpAddress.Unmarshal(m, b)
}
func (m *IpAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpAddress.Marshal(b, m, deterministic)
}
func (m *IpAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpAddress.Merge(m, src)
}
func (m *IpAddress) XXX_Size() int {
	return xxx_messageInfo_IpAddress.Size(m)
}
func (m *IpAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_IpAddress.DiscardUnknown(m)
}

var xxx_messageInfo_IpAddress proto.InternalMessageInfo

func (m *IpAddress) GetIpver() IpVersion {
	if m != nil {
		return m.Ipver
	}
	return IpVersion_IPV4
}

func (m *IpAddress) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type Prefix struct {
	Ip                   *IpAddress `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Length               uint32     `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	UnderlayRoute        []byte     `protobuf:"bytes,3,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Prefix) Reset()         { *m = Prefix{} }
func (m *Prefix) String() string { return proto.CompactTextString(m) }
func (*Prefix) ProtoMessage()    {}
func (*Prefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{3}
}

func (m *Prefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prefix.Unmarshal(m, b)
}
func (m *Prefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prefix.Marshal(b, m, deterministic)
}
func (m *Prefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prefix.Merge(m, src)
}
func (m *Prefix) XXX_Size() int {
	return xxx_messageInfo_Prefix.Size(m)
}
func (m *Prefix) XXX_DiscardUnknown() {
	xxx_messageInfo_Prefix.DiscardUnknown(m)
}

var xxx_messageInfo_Prefix proto.InternalMessageInfo

func (m *Prefix) GetIp() *IpAddress {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Prefix) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Prefix) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type Interface struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Vni                  uint32   `protobuf:"varint,2,opt,name=vni,proto3" json:"vni,omitempty"`
	PrimaryIpv4          []byte   `protobuf:"bytes,3,opt,name=primary_ipv4,json=primaryIpv4,proto3" json:"primary_ipv4,omitempty"`
	PrimaryIpv6          []byte   `protobuf:"bytes,4,opt,name=primary_ipv6,json=primaryIpv6,proto3" json:"primary_ipv6,omitempty"`
	UnderlayRoute        []byte   `protobuf:"bytes,5,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	PciName              string   `protobuf:"bytes,6,opt,name=pci_name,json=pciName,proto3" json:"pci_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interface) Reset()         { *m = Interface{} }
func (m *Interface) String() string { return proto.CompactTextString(m) }
func (*Interface) ProtoMessage()    {}
func (*Interface) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{4}
}

func (m *Interface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interface.Unmarshal(m, b)
}
func (m *Interface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interface.Marshal(b, m, deterministic)
}
func (m *Interface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interface.Merge(m, src)
}
func (m *Interface) XXX_Size() int {
	return xxx_messageInfo_Interface.Size(m)
}
func (m *Interface) XXX_DiscardUnknown() {
	xxx_messageInfo_Interface.DiscardUnknown(m)
}

var xxx_messageInfo_Interface proto.InternalMessageInfo

func (m *Interface) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Interface) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *Interface) GetPrimaryIpv4() []byte {
	if m != nil {
		return m.PrimaryIpv4
	}
	return nil
}

func (m *Interface) GetPrimaryIpv6() []byte {
	if m != nil {
		return m.PrimaryIpv6
	}
	return nil
}

func (m *Interface) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

func (m *Interface) GetPciName() string {
	if m != nil {
		return m.PciName
	}
	return ""
}

type IpConfig struct {
	PrimaryAddress       []byte   `protobuf:"bytes,1,opt,name=primary_address,json=primaryAddress,proto3" json:"primary_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpConfig) Reset()         { *m = IpConfig{} }
func (m *IpConfig) String() string { return proto.CompactTextString(m) }
func (*IpConfig) ProtoMessage()    {}
func (*IpConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{5}
}

func (m *IpConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpConfig.Unmarshal(m, b)
}
func (m *IpConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpConfig.Marshal(b, m, deterministic)
}
func (m *IpConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpConfig.Merge(m, src)
}
func (m *IpConfig) XXX_Size() int {
	return xxx_messageInfo_IpConfig.Size(m)
}
func (m *IpConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IpConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IpConfig proto.InternalMessageInfo

func (m *IpConfig) GetPrimaryAddress() []byte {
	if m != nil {
		return m.PrimaryAddress
	}
	return nil
}

type PxeConfig struct {
	NextServer           string   `protobuf:"bytes,1,opt,name=next_server,json=nextServer,proto3" json:"next_server,omitempty"`
	BootFilename         string   `protobuf:"bytes,2,opt,name=boot_filename,json=bootFilename,proto3" json:"boot_filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PxeConfig) Reset()         { *m = PxeConfig{} }
func (m *PxeConfig) String() string { return proto.CompactTextString(m) }
func (*PxeConfig) ProtoMessage()    {}
func (*PxeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{6}
}

func (m *PxeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PxeConfig.Unmarshal(m, b)
}
func (m *PxeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PxeConfig.Marshal(b, m, deterministic)
}
func (m *PxeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PxeConfig.Merge(m, src)
}
func (m *PxeConfig) XXX_Size() int {
	return xxx_messageInfo_PxeConfig.Size(m)
}
func (m *PxeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PxeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PxeConfig proto.InternalMessageInfo

func (m *PxeConfig) GetNextServer() string {
	if m != nil {
		return m.NextServer
	}
	return ""
}

func (m *PxeConfig) GetBootFilename() string {
	if m != nil {
		return m.BootFilename
	}
	return ""
}

type VirtualFunction struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// TODO: Not available anymore, remove in next breaking change
	Domain               uint32   `protobuf:"varint,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Bus                  uint32   `protobuf:"varint,3,opt,name=bus,proto3" json:"bus,omitempty"`
	Slot                 uint32   `protobuf:"varint,4,opt,name=slot,proto3" json:"slot,omitempty"`
	Function             uint32   `protobuf:"varint,5,opt,name=function,proto3" json:"function,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualFunction) Reset()         { *m = VirtualFunction{} }
func (m *VirtualFunction) String() string { return proto.CompactTextString(m) }
func (*VirtualFunction) ProtoMessage()    {}
func (*VirtualFunction) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{7}
}

func (m *VirtualFunction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualFunction.Unmarshal(m, b)
}
func (m *VirtualFunction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualFunction.Marshal(b, m, deterministic)
}
func (m *VirtualFunction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualFunction.Merge(m, src)
}
func (m *VirtualFunction) XXX_Size() int {
	return xxx_messageInfo_VirtualFunction.Size(m)
}
func (m *VirtualFunction) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualFunction.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualFunction proto.InternalMessageInfo

func (m *VirtualFunction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VirtualFunction) GetDomain() uint32 {
	if m != nil {
		return m.Domain
	}
	return 0
}

func (m *VirtualFunction) GetBus() uint32 {
	if m != nil {
		return m.Bus
	}
	return 0
}

func (m *VirtualFunction) GetSlot() uint32 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *VirtualFunction) GetFunction() uint32 {
	if m != nil {
		return m.Function
	}
	return 0
}

type LbPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port     uint32   `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Protocol Protocol `protobuf:"varint,2,opt,name=protocol,proto3,enum=dpdkironcore.v1.Protocol" json:"protocol,omitempty"`
}

func (m *LbPort) Reset()         { *m = LbPort{} }
func (m *LbPort) String() string { return proto.CompactTextString(m) }
func (*LbPort) ProtoMessage()    {}
func (*LbPort) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{8}
}

func (m *LbPort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LbPort.Unmarshal(m, b)
}
func (m *LbPort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LbPort.Marshal(b, m, deterministic)
}
func (m *LbPort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LbPort.Merge(m, src)
}
func (m *LbPort) XXX_Size() int {
	return xxx_messageInfo_LbPort.Size(m)
}
func (m *LbPort) XXX_DiscardUnknown() {
	xxx_messageInfo_LbPort.DiscardUnknown(m)
}

var xxx_messageInfo_LbPort proto.InternalMessageInfo

func (m *LbPort) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *LbPort) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_UNDEFINED
}

type NatEntry struct {
	NatIp                *IpAddress `protobuf:"bytes,1,opt,name=nat_ip,json=natIp,proto3" json:"nat_ip,omitempty"`
	MinPort              uint32     `protobuf:"varint,2,opt,name=min_port,json=minPort,proto3" json:"min_port,omitempty"`
	MaxPort              uint32     `protobuf:"varint,3,opt,name=max_port,json=maxPort,proto3" json:"max_port,omitempty"`
	UnderlayRoute        []byte     `protobuf:"bytes,4,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	Vni                  uint32     `protobuf:"varint,5,opt,name=vni,proto3" json:"vni,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NatEntry) Reset()         { *m = NatEntry{} }
func (m *NatEntry) String() string { return proto.CompactTextString(m) }
func (*NatEntry) ProtoMessage()    {}
func (*NatEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{9}
}

func (m *NatEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NatEntry.Unmarshal(m, b)
}
func (m *NatEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NatEntry.Marshal(b, m, deterministic)
}
func (m *NatEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NatEntry.Merge(m, src)
}
func (m *NatEntry) XXX_Size() int {
	return xxx_messageInfo_NatEntry.Size(m)
}
func (m *NatEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_NatEntry.DiscardUnknown(m)
}

var xxx_messageInfo_NatEntry proto.InternalMessageInfo

func (m *NatEntry) GetNatIp() *IpAddress {
	if m != nil {
		return m.NatIp
	}
	return nil
}

func (m *NatEntry) GetMinPort() uint32 {
	if m != nil {
		return m.MinPort
	}
	return 0
}

func (m *NatEntry) GetMaxPort() uint32 {
	if m != nil {
		return m.MaxPort
	}
	return 0
}

func (m *NatEntry) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

func (m *NatEntry) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

type Route struct {
	Prefix               *Prefix    `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	NexthopVni           uint32     `protobuf:"varint,2,opt,name=nexthop_vni,json=nexthopVni,proto3" json:"nexthop_vni,omitempty"`
	NexthopAddress       *IpAddress `protobuf:"bytes,3,opt,name=nexthop_address,json=nexthopAddress,proto3" json:"nexthop_address,omitempty"`
	Weight               uint32     `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{10}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetPrefix() *Prefix {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *Route) GetNexthopVni() uint32 {
	if m != nil {
		return m.NexthopVni
	}
	return 0
}

func (m *Route) GetNexthopAddress() *IpAddress {
	if m != nil {
		return m.NexthopAddress
	}
	return nil
}

func (m *Route) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type IcmpFilter struct {
	IcmpType             int32    `protobuf:"varint,1,opt,name=icmp_type,json=icmpType,proto3" json:"icmp_type,omitempty"`
	IcmpCode             int32    `protobuf:"varint,2,opt,name=icmp_code,json=icmpCode,proto3" json:"icmp_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcmpFilter) Reset()         { *m = IcmpFilter{} }
func (m *IcmpFilter) String() string { return proto.CompactTextString(m) }
func (*IcmpFilter) ProtoMessage()    {}
func (*IcmpFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{11}
}

func (m *IcmpFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcmpFilter.Unmarshal(m, b)
}
func (m *IcmpFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcmpFilter.Marshal(b, m, deterministic)
}
func (m *IcmpFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcmpFilter.Merge(m, src)
}
func (m *IcmpFilter) XXX_Size() int {
	return xxx_messageInfo_IcmpFilter.Size(m)
}
func (m *IcmpFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_IcmpFilter.DiscardUnknown(m)
}

var xxx_messageInfo_IcmpFilter proto.InternalMessageInfo

func (m *IcmpFilter) GetIcmpType() int32 {
	if m != nil {
		return m.IcmpType
	}
	return 0
}

func (m *IcmpFilter) GetIcmpCode() int32 {
	if m != nil {
		return m.IcmpCode
	}
	return 0
}

type TcpFilter struct {
	SrcPortLower         int32    `protobuf:"varint,1,opt,name=src_port_lower,json=srcPortLower,proto3" json:"src_port_lower,omitempty"`
	SrcPortUpper         int32    `protobuf:"varint,2,opt,name=src_port_upper,json=srcPortUpper,proto3" json:"src_port_upper,omitempty"`
	DstPortLower         int32    `protobuf:"varint,3,opt,name=dst_port_lower,json=dstPortLower,proto3" json:"dst_port_lower,omitempty"`
	DstPortUpper         int32    `protobuf:"varint,4,opt,name=dst_port_upper,json=dstPortUpper,proto3" json:"dst_port_upper,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpFilter) Reset()         { *m = TcpFilter{} }
func (m *TcpFilter) String() string { return proto.CompactTextString(m) }
func (*TcpFilter) ProtoMessage()    {}
func (*TcpFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{12}
}

func (m *TcpFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpFilter.Unmarshal(m, b)
}
func (m *TcpFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpFilter.Marshal(b, m, deterministic)
}
func (m *TcpFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpFilter.Merge(m, src)
}
func (m *TcpFilter) XXX_Size() int {
	return xxx_messageInfo_TcpFilter.Size(m)
}
func (m *TcpFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TcpFilter proto.InternalMessageInfo

func (m *TcpFilter) GetSrcPortLower() int32 {
	if m != nil {
		return m.SrcPortLower
	}
	return 0
}

func (m *TcpFilter) GetSrcPortUpper() int32 {
	if m != nil {
		return m.SrcPortUpper
	}
	return 0
}

func (m *TcpFilter) GetDstPortLower() int32 {
	if m != nil {
		return m.DstPortLower
	}
	return 0
}

func (m *TcpFilter) GetDstPortUpper() int32 {
	if m != nil {
		return m.DstPortUpper
	}
	return 0
}

type UdpFilter struct {
	SrcPortLower         int32    `protobuf:"varint,1,opt,name=src_port_lower,json=srcPortLower,proto3" json:"src_port_lower,omitempty"`
	SrcPortUpper         int32    `protobuf:"varint,2,opt,name=src_port_upper,json=srcPortUpper,proto3" json:"src_port_upper,omitempty"`
	DstPortLower         int32    `protobuf:"varint,3,opt,name=dst_port_lower,json=dstPortLower,proto3" json:"dst_port_lower,omitempty"`
	DstPortUpper         int32    `protobuf:"varint,4,opt,name=dst_port_upper,json=dstPortUpper,proto3" json:"dst_port_upper,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UdpFilter) Reset()         { *m = UdpFilter{} }
func (m *UdpFilter) String() string { return proto.CompactTextString(m) }
func (*UdpFilter) ProtoMessage()    {}
func (*UdpFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{13}
}

func (m *UdpFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpFilter.Unmarshal(m, b)
}
func (m *UdpFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpFilter.Marshal(b, m, deterministic)
}
func (m *UdpFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpFilter.Merge(m, src)
}
func (m *UdpFilter) XXX_Size() int {
	return xxx_messageInfo_UdpFilter.Size(m)
}
func (m *UdpFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpFilter.DiscardUnknown(m)
}

var xxx_messageInfo_UdpFilter proto.InternalMessageInfo

func (m *UdpFilter) GetSrcPortLower() int32 {
	if m != nil {
		return m.SrcPortLower
	}
	return 0
}

func (m *UdpFilter) GetSrcPortUpper() int32 {
	if m != nil {
		return m.SrcPortUpper
	}
	return 0
}

func (m *UdpFilter) GetDstPortLower() int32 {
	if m != nil {
		return m.DstPortLower
	}
	return 0
}

func (m *UdpFilter) GetDstPortUpper() int32 {
	if m != nil {
		return m.DstPortUpper
	}
	return 0
}

type ProtocolFilter struct {
	// Types that are valid to be assigned to Filter:
	//	*ProtocolFilter_Icmp
	//	*ProtocolFilter_Tcp
	//	*ProtocolFilter_Udp
	Filter               isProtocolFilter_Filter `protobuf_oneof:"filter"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ProtocolFilter) Reset()         { *m = ProtocolFilter{} }
func (m *ProtocolFilter) String() string { return proto.CompactTextString(m) }
func (*ProtocolFilter) ProtoMessage()    {}
func (*ProtocolFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{14}
}

func (m *ProtocolFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolFilter.Unmarshal(m, b)
}
func (m *ProtocolFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolFilter.Marshal(b, m, deterministic)
}
func (m *ProtocolFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolFilter.Merge(m, src)
}
func (m *ProtocolFilter) XXX_Size() int {
	return xxx_messageInfo_ProtocolFilter.Size(m)
}
func (m *ProtocolFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolFilter proto.InternalMessageInfo

type isProtocolFilter_Filter interface {
	isProtocolFilter_Filter()
}

type ProtocolFilter_Icmp struct {
	Icmp *IcmpFilter `protobuf:"bytes,1,opt,name=icmp,proto3,oneof"`
}

type ProtocolFilter_Tcp struct {
	Tcp *TcpFilter `protobuf:"bytes,2,opt,name=tcp,proto3,oneof"`
}

type ProtocolFilter_Udp struct {
	Udp *UdpFilter `protobuf:"bytes,3,opt,name=udp,proto3,oneof"`
}

func (*ProtocolFilter_Icmp) isProtocolFilter_Filter() {}

func (*ProtocolFilter_Tcp) isProtocolFilter_Filter() {}

func (*ProtocolFilter_Udp) isProtocolFilter_Filter() {}

func (m *ProtocolFilter) GetFilter() isProtocolFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ProtocolFilter) GetIcmp() *IcmpFilter {
	if x, ok := m.GetFilter().(*ProtocolFilter_Icmp); ok {
		return x.Icmp
	}
	return nil
}

func (m *ProtocolFilter) GetTcp() *TcpFilter {
	if x, ok := m.GetFilter().(*ProtocolFilter_Tcp); ok {
		return x.Tcp
	}
	return nil
}

func (m *ProtocolFilter) GetUdp() *UdpFilter {
	if x, ok := m.GetFilter().(*ProtocolFilter_Udp); ok {
		return x.Udp
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ProtocolFilter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ProtocolFilter_Icmp)(nil),
		(*ProtocolFilter_Tcp)(nil),
		(*ProtocolFilter_Udp)(nil),
	}
}

// Firewall Rules can be inserted and removed while the interface is running. Linked list is used despite O(n) nature, as the list
// needs to be traversed only once for each packet. (Stateful Firewall and each pass after that is O(1))
// Firewall rules have a priority. "0" being the highest and "65536" being the lowest. Default is "1000".
// Current implementation supports only "allow" rules. The priority doesnt have any influence when we have only "allow" rules.
// Without any installed rule, egress default is "allow" everything and ingress default is "deny" everything. With first installed
// egress rule, egress default changes to "deny" everything except the installed rule(s).
// When a packet matches a firewall rule, the defined action is taken. No further firewall rules will be evaluated thereafter.
type FirewallRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                []byte           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Direction         TrafficDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=dpdkironcore.v1.TrafficDirection" json:"direction,omitempty"`
	Action            FirewallAction   `protobuf:"varint,3,opt,name=action,proto3,enum=dpdkironcore.v1.FirewallAction" json:"action,omitempty"`           // Can be only "accept" at the moment.
	Priority          uint32           `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`                                           // For future use. No effect at the moment.
	SourcePrefix      *Prefix          `protobuf:"bytes,5,opt,name=source_prefix,json=sourcePrefix,proto3" json:"source_prefix,omitempty"`                // 0.0.0.0 with prefix length 0 matches all source ips
	DestinationPrefix *Prefix          `protobuf:"bytes,6,opt,name=destination_prefix,json=destinationPrefix,proto3" json:"destination_prefix,omitempty"` // 0.0.0.0 with prefix length 0 matches all destination ips
	ProtocolFilter    *ProtocolFilter  `protobuf:"bytes,7,opt,name=protocol_filter,json=protocolFilter,proto3" json:"protocol_filter,omitempty"`          // Not defining a protocol filter matches all protocols
}

func (m *FirewallRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirewallRule.Unmarshal(m, b)
}
func (m *FirewallRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirewallRule.Marshal(b, m, deterministic)
}
func (m *FirewallRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirewallRule.Merge(m, src)
}
func (m *FirewallRule) XXX_Size() int {
	return xxx_messageInfo_FirewallRule.Size(m)
}
func (m *FirewallRule) XXX_DiscardUnknown() {
	xxx_messageInfo_FirewallRule.DiscardUnknown(m)
}

var xxx_messageInfo_FirewallRule proto.InternalMessageInfo

func (m *FirewallRule) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *FirewallRule) GetDirection() TrafficDirection {
	if m != nil {
		return m.Direction
	}
	return TrafficDirection_INGRESS
}

func (m *FirewallRule) GetAction() FirewallAction {
	if m != nil {
		return m.Action
	}
	return FirewallAction_DROP
}

func (m *FirewallRule) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *FirewallRule) GetSourcePrefix() *Prefix {
	if m != nil {
		return m.SourcePrefix
	}
	return nil
}

func (m *FirewallRule) GetDestinationPrefix() *Prefix {
	if m != nil {
		return m.DestinationPrefix
	}
	return nil
}

func (m *FirewallRule) GetProtocolFilter() *ProtocolFilter {
	if m != nil {
		return m.ProtocolFilter
	}
	return nil
}

/// REQUESTS/RESPONSES
type CheckInitializedRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckInitializedRequest) Reset()         { *m = CheckInitializedRequest{} }
func (m *CheckInitializedRequest) String() string { return proto.CompactTextString(m) }
func (*CheckInitializedRequest) ProtoMessage()    {}
func (*CheckInitializedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{16}
}

func (m *CheckInitializedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckInitializedRequest.Unmarshal(m, b)
}
func (m *CheckInitializedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckInitializedRequest.Marshal(b, m, deterministic)
}
func (m *CheckInitializedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckInitializedRequest.Merge(m, src)
}
func (m *CheckInitializedRequest) XXX_Size() int {
	return xxx_messageInfo_CheckInitializedRequest.Size(m)
}
func (m *CheckInitializedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckInitializedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckInitializedRequest proto.InternalMessageInfo

type CheckInitializedResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckInitializedResponse) Reset()         { *m = CheckInitializedResponse{} }
func (m *CheckInitializedResponse) String() string { return proto.CompactTextString(m) }
func (*CheckInitializedResponse) ProtoMessage()    {}
func (*CheckInitializedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{17}
}

func (m *CheckInitializedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckInitializedResponse.Unmarshal(m, b)
}
func (m *CheckInitializedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckInitializedResponse.Marshal(b, m, deterministic)
}
func (m *CheckInitializedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckInitializedResponse.Merge(m, src)
}
func (m *CheckInitializedResponse) XXX_Size() int {
	return xxx_messageInfo_CheckInitializedResponse.Size(m)
}
func (m *CheckInitializedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckInitializedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckInitializedResponse proto.InternalMessageInfo

func (m *CheckInitializedResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CheckInitializedResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type InitializeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitializeRequest) Reset()         { *m = InitializeRequest{} }
func (m *InitializeRequest) String() string { return proto.CompactTextString(m) }
func (*InitializeRequest) ProtoMessage()    {}
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{18}
}

func (m *InitializeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitializeRequest.Unmarshal(m, b)
}
func (m *InitializeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitializeRequest.Marshal(b, m, deterministic)
}
func (m *InitializeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeRequest.Merge(m, src)
}
func (m *InitializeRequest) XXX_Size() int {
	return xxx_messageInfo_InitializeRequest.Size(m)
}
func (m *InitializeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeRequest proto.InternalMessageInfo

type InitializeResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitializeResponse) Reset()         { *m = InitializeResponse{} }
func (m *InitializeResponse) String() string { return proto.CompactTextString(m) }
func (*InitializeResponse) ProtoMessage()    {}
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{19}
}

func (m *InitializeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitializeResponse.Unmarshal(m, b)
}
func (m *InitializeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitializeResponse.Marshal(b, m, deterministic)
}
func (m *InitializeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeResponse.Merge(m, src)
}
func (m *InitializeResponse) XXX_Size() int {
	return xxx_messageInfo_InitializeResponse.Size(m)
}
func (m *InitializeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeResponse proto.InternalMessageInfo

func (m *InitializeResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InitializeResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type GetVersionRequest struct {
	ClientProtocol       string   `protobuf:"bytes,1,opt,name=client_protocol,json=clientProtocol,proto3" json:"client_protocol,omitempty"`
	ClientName           string   `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	ClientVersion        string   `protobuf:"bytes,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionRequest) Reset()         { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()    {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{20}
}

func (m *GetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionRequest.Unmarshal(m, b)
}
func (m *GetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionRequest.Marshal(b, m, deterministic)
}
func (m *GetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionRequest.Merge(m, src)
}
func (m *GetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionRequest.Size(m)
}
func (m *GetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionRequest proto.InternalMessageInfo

func (m *GetVersionRequest) GetClientProtocol() string {
	if m != nil {
		return m.ClientProtocol
	}
	return ""
}

func (m *GetVersionRequest) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *GetVersionRequest) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

type GetVersionResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ServiceProtocol      string   `protobuf:"bytes,2,opt,name=service_protocol,json=serviceProtocol,proto3" json:"service_protocol,omitempty"`
	ServiceVersion       string   `protobuf:"bytes,3,opt,name=service_version,json=serviceVersion,proto3" json:"service_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{21}
}

func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(m, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetVersionResponse) GetServiceProtocol() string {
	if m != nil {
		return m.ServiceProtocol
	}
	return ""
}

func (m *GetVersionResponse) GetServiceVersion() string {
	if m != nil {
		return m.ServiceVersion
	}
	return ""
}

type ListInterfacesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListInterfacesRequest) Reset()         { *m = ListInterfacesRequest{} }
func (m *ListInterfacesRequest) String() string { return proto.CompactTextString(m) }
func (*ListInterfacesRequest) ProtoMessage()    {}
func (*ListInterfacesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{22}
}

func (m *ListInterfacesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInterfacesRequest.Unmarshal(m, b)
}
func (m *ListInterfacesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInterfacesRequest.Marshal(b, m, deterministic)
}
func (m *ListInterfacesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInterfacesRequest.Merge(m, src)
}
func (m *ListInterfacesRequest) XXX_Size() int {
	return xxx_messageInfo_ListInterfacesRequest.Size(m)
}
func (m *ListInterfacesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInterfacesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListInterfacesRequest proto.InternalMessageInfo

type ListInterfacesResponse struct {
	Status               *Status      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Interfaces           []*Interface `protobuf:"bytes,2,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListInterfacesResponse) Reset()         { *m = ListInterfacesResponse{} }
func (m *ListInterfacesResponse) String() string { return proto.CompactTextString(m) }
func (*ListInterfacesResponse) ProtoMessage()    {}
func (*ListInterfacesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{23}
}

func (m *ListInterfacesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInterfacesResponse.Unmarshal(m, b)
}
func (m *ListInterfacesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInterfacesResponse.Marshal(b, m, deterministic)
}
func (m *ListInterfacesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInterfacesResponse.Merge(m, src)
}
func (m *ListInterfacesResponse) XXX_Size() int {
	return xxx_messageInfo_ListInterfacesResponse.Size(m)
}
func (m *ListInterfacesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInterfacesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListInterfacesResponse proto.InternalMessageInfo

func (m *ListInterfacesResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListInterfacesResponse) GetInterfaces() []*Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type GetInterfaceRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInterfaceRequest) Reset()         { *m = GetInterfaceRequest{} }
func (m *GetInterfaceRequest) String() string { return proto.CompactTextString(m) }
func (*GetInterfaceRequest) ProtoMessage()    {}
func (*GetInterfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{24}
}

func (m *GetInterfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInterfaceRequest.Unmarshal(m, b)
}
func (m *GetInterfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInterfaceRequest.Marshal(b, m, deterministic)
}
func (m *GetInterfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInterfaceRequest.Merge(m, src)
}
func (m *GetInterfaceRequest) XXX_Size() int {
	return xxx_messageInfo_GetInterfaceRequest.Size(m)
}
func (m *GetInterfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInterfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInterfaceRequest proto.InternalMessageInfo

func (m *GetInterfaceRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

type GetInterfaceResponse struct {
	Status               *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Interface            *Interface `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetInterfaceResponse) Reset()         { *m = GetInterfaceResponse{} }
func (m *GetInterfaceResponse) String() string { return proto.CompactTextString(m) }
func (*GetInterfaceResponse) ProtoMessage()    {}
func (*GetInterfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{25}
}

func (m *GetInterfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInterfaceResponse.Unmarshal(m, b)
}
func (m *GetInterfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInterfaceResponse.Marshal(b, m, deterministic)
}
func (m *GetInterfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInterfaceResponse.Merge(m, src)
}
func (m *GetInterfaceResponse) XXX_Size() int {
	return xxx_messageInfo_GetInterfaceResponse.Size(m)
}
func (m *GetInterfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInterfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInterfaceResponse proto.InternalMessageInfo

func (m *GetInterfaceResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetInterfaceResponse) GetInterface() *Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

type CreateInterfaceRequest struct {
	// Define whether a Bare Metal Interface or a Virtual Interface is created.
	// Both instance types cannot be mixed during a session.
	// Maximum number of instantiated bare metal interfaces is 1.
	// Maximum number of Virtual Interfaces is not defined.
	InterfaceType InterfaceType `protobuf:"varint,1,opt,name=interface_type,json=interfaceType,proto3,enum=dpdkironcore.v1.InterfaceType" json:"interface_type,omitempty"`
	InterfaceId   []byte        `protobuf:"bytes,2,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	Vni           uint32        `protobuf:"varint,3,opt,name=vni,proto3" json:"vni,omitempty"`
	Ipv4Config    *IpConfig     `protobuf:"bytes,4,opt,name=ipv4_config,json=ipv4Config,proto3" json:"ipv4_config,omitempty"`
	Ipv6Config    *IpConfig     `protobuf:"bytes,5,opt,name=ipv6_config,json=ipv6Config,proto3" json:"ipv6_config,omitempty"`
	PxeConfig     *PxeConfig    `protobuf:"bytes,6,opt,name=pxe_config,json=pxeConfig,proto3" json:"pxe_config,omitempty"`
	// Device with this name will be assigned if it exists, otherwise error is returned.
	DeviceName           string   `protobuf:"bytes,7,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateInterfaceRequest) Reset()         { *m = CreateInterfaceRequest{} }
func (m *CreateInterfaceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateInterfaceRequest) ProtoMessage()    {}
func (*CreateInterfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{26}
}

func (m *CreateInterfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateInterfaceRequest.Unmarshal(m, b)
}
func (m *CreateInterfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateInterfaceRequest.Marshal(b, m, deterministic)
}
func (m *CreateInterfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInterfaceRequest.Merge(m, src)
}
func (m *CreateInterfaceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateInterfaceRequest.Size(m)
}
func (m *CreateInterfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInterfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInterfaceRequest proto.InternalMessageInfo

func (m *CreateInterfaceRequest) GetInterfaceType() InterfaceType {
	if m != nil {
		return m.InterfaceType
	}
	return InterfaceType_VIRTUAL
}

func (m *CreateInterfaceRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *CreateInterfaceRequest) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *CreateInterfaceRequest) GetIpv4Config() *IpConfig {
	if m != nil {
		return m.Ipv4Config
	}
	return nil
}

func (m *CreateInterfaceRequest) GetIpv6Config() *IpConfig {
	if m != nil {
		return m.Ipv6Config
	}
	return nil
}

func (m *CreateInterfaceRequest) GetPxeConfig() *PxeConfig {
	if m != nil {
		return m.PxeConfig
	}
	return nil
}

func (m *CreateInterfaceRequest) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

type CreateInterfaceResponse struct {
	Status               *Status          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UnderlayRoute        []byte           `protobuf:"bytes,2,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	Vf                   *VirtualFunction `protobuf:"bytes,3,opt,name=vf,proto3" json:"vf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateInterfaceResponse) Reset()         { *m = CreateInterfaceResponse{} }
func (m *CreateInterfaceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateInterfaceResponse) ProtoMessage()    {}
func (*CreateInterfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{27}
}

func (m *CreateInterfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateInterfaceResponse.Unmarshal(m, b)
}
func (m *CreateInterfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateInterfaceResponse.Marshal(b, m, deterministic)
}
func (m *CreateInterfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInterfaceResponse.Merge(m, src)
}
func (m *CreateInterfaceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateInterfaceResponse.Size(m)
}
func (m *CreateInterfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInterfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInterfaceResponse proto.InternalMessageInfo

func (m *CreateInterfaceResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateInterfaceResponse) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

func (m *CreateInterfaceResponse) GetVf() *VirtualFunction {
	if m != nil {
		return m.Vf
	}
	return nil
}

type DeleteInterfaceRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteInterfaceRequest) Reset()         { *m = DeleteInterfaceRequest{} }
func (m *DeleteInterfaceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteInterfaceRequest) ProtoMessage()    {}
func (*DeleteInterfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{28}
}

func (m *DeleteInterfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteInterfaceRequest.Unmarshal(m, b)
}
func (m *DeleteInterfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteInterfaceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteInterfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteInterfaceRequest.Merge(m, src)
}
func (m *DeleteInterfaceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteInterfaceRequest.Size(m)
}
func (m *DeleteInterfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteInterfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteInterfaceRequest proto.InternalMessageInfo

func (m *DeleteInterfaceRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

type DeleteInterfaceResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteInterfaceResponse) Reset()         { *m = DeleteInterfaceResponse{} }
func (m *DeleteInterfaceResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteInterfaceResponse) ProtoMessage()    {}
func (*DeleteInterfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{29}
}

func (m *DeleteInterfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteInterfaceResponse.Unmarshal(m, b)
}
func (m *DeleteInterfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteInterfaceResponse.Marshal(b, m, deterministic)
}
func (m *DeleteInterfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteInterfaceResponse.Merge(m, src)
}
func (m *DeleteInterfaceResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteInterfaceResponse.Size(m)
}
func (m *DeleteInterfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteInterfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteInterfaceResponse proto.InternalMessageInfo

func (m *DeleteInterfaceResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListPrefixesRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPrefixesRequest) Reset()         { *m = ListPrefixesRequest{} }
func (m *ListPrefixesRequest) String() string { return proto.CompactTextString(m) }
func (*ListPrefixesRequest) ProtoMessage()    {}
func (*ListPrefixesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{30}
}

func (m *ListPrefixesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPrefixesRequest.Unmarshal(m, b)
}
func (m *ListPrefixesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPrefixesRequest.Marshal(b, m, deterministic)
}
func (m *ListPrefixesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPrefixesRequest.Merge(m, src)
}
func (m *ListPrefixesRequest) XXX_Size() int {
	return xxx_messageInfo_ListPrefixesRequest.Size(m)
}
func (m *ListPrefixesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPrefixesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPrefixesRequest proto.InternalMessageInfo

func (m *ListPrefixesRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

type ListPrefixesResponse struct {
	Status               *Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Prefixes             []*Prefix `protobuf:"bytes,2,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListPrefixesResponse) Reset()         { *m = ListPrefixesResponse{} }
func (m *ListPrefixesResponse) String() string { return proto.CompactTextString(m) }
func (*ListPrefixesResponse) ProtoMessage()    {}
func (*ListPrefixesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{31}
}

func (m *ListPrefixesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPrefixesResponse.Unmarshal(m, b)
}
func (m *ListPrefixesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPrefixesResponse.Marshal(b, m, deterministic)
}
func (m *ListPrefixesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPrefixesResponse.Merge(m, src)
}
func (m *ListPrefixesResponse) XXX_Size() int {
	return xxx_messageInfo_ListPrefixesResponse.Size(m)
}
func (m *ListPrefixesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPrefixesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPrefixesResponse proto.InternalMessageInfo

func (m *ListPrefixesResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListPrefixesResponse) GetPrefixes() []*Prefix {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

type CreatePrefixRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	Prefix               *Prefix  `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePrefixRequest) Reset()         { *m = CreatePrefixRequest{} }
func (m *CreatePrefixRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePrefixRequest) ProtoMessage()    {}
func (*CreatePrefixRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{32}
}

func (m *CreatePrefixRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePrefixRequest.Unmarshal(m, b)
}
func (m *CreatePrefixRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePrefixRequest.Marshal(b, m, deterministic)
}
func (m *CreatePrefixRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePrefixRequest.Merge(m, src)
}
func (m *CreatePrefixRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePrefixRequest.Size(m)
}
func (m *CreatePrefixRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePrefixRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePrefixRequest proto.InternalMessageInfo

func (m *CreatePrefixRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *CreatePrefixRequest) GetPrefix() *Prefix {
	if m != nil {
		return m.Prefix
	}
	return nil
}

type CreatePrefixResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UnderlayRoute        []byte   `protobuf:"bytes,2,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePrefixResponse) Reset()         { *m = CreatePrefixResponse{} }
func (m *CreatePrefixResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePrefixResponse) ProtoMessage()    {}
func (*CreatePrefixResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{33}
}

func (m *CreatePrefixResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePrefixResponse.Unmarshal(m, b)
}
func (m *CreatePrefixResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePrefixResponse.Marshal(b, m, deterministic)
}
func (m *CreatePrefixResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePrefixResponse.Merge(m, src)
}
func (m *CreatePrefixResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePrefixResponse.Size(m)
}
func (m *CreatePrefixResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePrefixResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePrefixResponse proto.InternalMessageInfo

func (m *CreatePrefixResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreatePrefixResponse) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type DeletePrefixRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	Prefix               *Prefix  `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePrefixRequest) Reset()         { *m = DeletePrefixRequest{} }
func (m *DeletePrefixRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePrefixRequest) ProtoMessage()    {}
func (*DeletePrefixRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{34}
}

func (m *DeletePrefixRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePrefixRequest.Unmarshal(m, b)
}
func (m *DeletePrefixRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePrefixRequest.Marshal(b, m, deterministic)
}
func (m *DeletePrefixRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePrefixRequest.Merge(m, src)
}
func (m *DeletePrefixRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePrefixRequest.Size(m)
}
func (m *DeletePrefixRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePrefixRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePrefixRequest proto.InternalMessageInfo

func (m *DeletePrefixRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *DeletePrefixRequest) GetPrefix() *Prefix {
	if m != nil {
		return m.Prefix
	}
	return nil
}

type DeletePrefixResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePrefixResponse) Reset()         { *m = DeletePrefixResponse{} }
func (m *DeletePrefixResponse) String() string { return proto.CompactTextString(m) }
func (*DeletePrefixResponse) ProtoMessage()    {}
func (*DeletePrefixResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{35}
}

func (m *DeletePrefixResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePrefixResponse.Unmarshal(m, b)
}
func (m *DeletePrefixResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePrefixResponse.Marshal(b, m, deterministic)
}
func (m *DeletePrefixResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePrefixResponse.Merge(m, src)
}
func (m *DeletePrefixResponse) XXX_Size() int {
	return xxx_messageInfo_DeletePrefixResponse.Size(m)
}
func (m *DeletePrefixResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePrefixResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePrefixResponse proto.InternalMessageInfo

func (m *DeletePrefixResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListLoadBalancerPrefixesRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLoadBalancerPrefixesRequest) Reset()         { *m = ListLoadBalancerPrefixesRequest{} }
func (m *ListLoadBalancerPrefixesRequest) String() string { return proto.CompactTextString(m) }
func (*ListLoadBalancerPrefixesRequest) ProtoMessage()    {}
func (*ListLoadBalancerPrefixesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{36}
}

func (m *ListLoadBalancerPrefixesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLoadBalancerPrefixesRequest.Unmarshal(m, b)
}
func (m *ListLoadBalancerPrefixesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLoadBalancerPrefixesRequest.Marshal(b, m, deterministic)
}
func (m *ListLoadBalancerPrefixesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLoadBalancerPrefixesRequest.Merge(m, src)
}
func (m *ListLoadBalancerPrefixesRequest) XXX_Size() int {
	return xxx_messageInfo_ListLoadBalancerPrefixesRequest.Size(m)
}
func (m *ListLoadBalancerPrefixesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLoadBalancerPrefixesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLoadBalancerPrefixesRequest proto.InternalMessageInfo

func (m *ListLoadBalancerPrefixesRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

type ListLoadBalancerPrefixesResponse struct {
	Status               *Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Prefixes             []*Prefix `protobuf:"bytes,2,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListLoadBalancerPrefixesResponse) Reset()         { *m = ListLoadBalancerPrefixesResponse{} }
func (m *ListLoadBalancerPrefixesResponse) String() string { return proto.CompactTextString(m) }
func (*ListLoadBalancerPrefixesResponse) ProtoMessage()    {}
func (*ListLoadBalancerPrefixesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{37}
}

func (m *ListLoadBalancerPrefixesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLoadBalancerPrefixesResponse.Unmarshal(m, b)
}
func (m *ListLoadBalancerPrefixesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLoadBalancerPrefixesResponse.Marshal(b, m, deterministic)
}
func (m *ListLoadBalancerPrefixesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLoadBalancerPrefixesResponse.Merge(m, src)
}
func (m *ListLoadBalancerPrefixesResponse) XXX_Size() int {
	return xxx_messageInfo_ListLoadBalancerPrefixesResponse.Size(m)
}
func (m *ListLoadBalancerPrefixesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLoadBalancerPrefixesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLoadBalancerPrefixesResponse proto.InternalMessageInfo

func (m *ListLoadBalancerPrefixesResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListLoadBalancerPrefixesResponse) GetPrefixes() []*Prefix {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

type CreateLoadBalancerPrefixRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	Prefix               *Prefix  `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLoadBalancerPrefixRequest) Reset()         { *m = CreateLoadBalancerPrefixRequest{} }
func (m *CreateLoadBalancerPrefixRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLoadBalancerPrefixRequest) ProtoMessage()    {}
func (*CreateLoadBalancerPrefixRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{38}
}

func (m *CreateLoadBalancerPrefixRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLoadBalancerPrefixRequest.Unmarshal(m, b)
}
func (m *CreateLoadBalancerPrefixRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLoadBalancerPrefixRequest.Marshal(b, m, deterministic)
}
func (m *CreateLoadBalancerPrefixRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLoadBalancerPrefixRequest.Merge(m, src)
}
func (m *CreateLoadBalancerPrefixRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLoadBalancerPrefixRequest.Size(m)
}
func (m *CreateLoadBalancerPrefixRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLoadBalancerPrefixRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLoadBalancerPrefixRequest proto.InternalMessageInfo

func (m *CreateLoadBalancerPrefixRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *CreateLoadBalancerPrefixRequest) GetPrefix() *Prefix {
	if m != nil {
		return m.Prefix
	}
	return nil
}

type CreateLoadBalancerPrefixResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UnderlayRoute        []byte   `protobuf:"bytes,2,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLoadBalancerPrefixResponse) Reset()         { *m = CreateLoadBalancerPrefixResponse{} }
func (m *CreateLoadBalancerPrefixResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLoadBalancerPrefixResponse) ProtoMessage()    {}
func (*CreateLoadBalancerPrefixResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{39}
}

func (m *CreateLoadBalancerPrefixResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLoadBalancerPrefixResponse.Unmarshal(m, b)
}
func (m *CreateLoadBalancerPrefixResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLoadBalancerPrefixResponse.Marshal(b, m, deterministic)
}
func (m *CreateLoadBalancerPrefixResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLoadBalancerPrefixResponse.Merge(m, src)
}
func (m *CreateLoadBalancerPrefixResponse) XXX_Size() int {
	return xxx_messageInfo_CreateLoadBalancerPrefixResponse.Size(m)
}
func (m *CreateLoadBalancerPrefixResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLoadBalancerPrefixResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLoadBalancerPrefixResponse proto.InternalMessageInfo

func (m *CreateLoadBalancerPrefixResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateLoadBalancerPrefixResponse) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type DeleteLoadBalancerPrefixRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	Prefix               *Prefix  `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLoadBalancerPrefixRequest) Reset()         { *m = DeleteLoadBalancerPrefixRequest{} }
func (m *DeleteLoadBalancerPrefixRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLoadBalancerPrefixRequest) ProtoMessage()    {}
func (*DeleteLoadBalancerPrefixRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{40}
}

func (m *DeleteLoadBalancerPrefixRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLoadBalancerPrefixRequest.Unmarshal(m, b)
}
func (m *DeleteLoadBalancerPrefixRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLoadBalancerPrefixRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLoadBalancerPrefixRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLoadBalancerPrefixRequest.Merge(m, src)
}
func (m *DeleteLoadBalancerPrefixRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLoadBalancerPrefixRequest.Size(m)
}
func (m *DeleteLoadBalancerPrefixRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLoadBalancerPrefixRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLoadBalancerPrefixRequest proto.InternalMessageInfo

func (m *DeleteLoadBalancerPrefixRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *DeleteLoadBalancerPrefixRequest) GetPrefix() *Prefix {
	if m != nil {
		return m.Prefix
	}
	return nil
}

type DeleteLoadBalancerPrefixResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLoadBalancerPrefixResponse) Reset()         { *m = DeleteLoadBalancerPrefixResponse{} }
func (m *DeleteLoadBalancerPrefixResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteLoadBalancerPrefixResponse) ProtoMessage()    {}
func (*DeleteLoadBalancerPrefixResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{41}
}

func (m *DeleteLoadBalancerPrefixResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLoadBalancerPrefixResponse.Unmarshal(m, b)
}
func (m *DeleteLoadBalancerPrefixResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLoadBalancerPrefixResponse.Marshal(b, m, deterministic)
}
func (m *DeleteLoadBalancerPrefixResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLoadBalancerPrefixResponse.Merge(m, src)
}
func (m *DeleteLoadBalancerPrefixResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteLoadBalancerPrefixResponse.Size(m)
}
func (m *DeleteLoadBalancerPrefixResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLoadBalancerPrefixResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLoadBalancerPrefixResponse proto.InternalMessageInfo

func (m *DeleteLoadBalancerPrefixResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CreateVipRequest struct {
	InterfaceId          []byte     `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	VipIp                *IpAddress `protobuf:"bytes,2,opt,name=vip_ip,json=vipIp,proto3" json:"vip_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateVipRequest) Reset()         { *m = CreateVipRequest{} }
func (m *CreateVipRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVipRequest) ProtoMessage()    {}
func (*CreateVipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{42}
}

func (m *CreateVipRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVipRequest.Unmarshal(m, b)
}
func (m *CreateVipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVipRequest.Marshal(b, m, deterministic)
}
func (m *CreateVipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVipRequest.Merge(m, src)
}
func (m *CreateVipRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVipRequest.Size(m)
}
func (m *CreateVipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVipRequest proto.InternalMessageInfo

func (m *CreateVipRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *CreateVipRequest) GetVipIp() *IpAddress {
	if m != nil {
		return m.VipIp
	}
	return nil
}

type CreateVipResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UnderlayRoute        []byte   `protobuf:"bytes,2,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVipResponse) Reset()         { *m = CreateVipResponse{} }
func (m *CreateVipResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVipResponse) ProtoMessage()    {}
func (*CreateVipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{43}
}

func (m *CreateVipResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVipResponse.Unmarshal(m, b)
}
func (m *CreateVipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVipResponse.Marshal(b, m, deterministic)
}
func (m *CreateVipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVipResponse.Merge(m, src)
}
func (m *CreateVipResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVipResponse.Size(m)
}
func (m *CreateVipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVipResponse proto.InternalMessageInfo

func (m *CreateVipResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateVipResponse) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type GetVipRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVipRequest) Reset()         { *m = GetVipRequest{} }
func (m *GetVipRequest) String() string { return proto.CompactTextString(m) }
func (*GetVipRequest) ProtoMessage()    {}
func (*GetVipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{44}
}

func (m *GetVipRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVipRequest.Unmarshal(m, b)
}
func (m *GetVipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVipRequest.Marshal(b, m, deterministic)
}
func (m *GetVipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVipRequest.Merge(m, src)
}
func (m *GetVipRequest) XXX_Size() int {
	return xxx_messageInfo_GetVipRequest.Size(m)
}
func (m *GetVipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVipRequest proto.InternalMessageInfo

func (m *GetVipRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

type GetVipResponse struct {
	Status               *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	VipIp                *IpAddress `protobuf:"bytes,2,opt,name=vip_ip,json=vipIp,proto3" json:"vip_ip,omitempty"`
	UnderlayRoute        []byte     `protobuf:"bytes,3,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetVipResponse) Reset()         { *m = GetVipResponse{} }
func (m *GetVipResponse) String() string { return proto.CompactTextString(m) }
func (*GetVipResponse) ProtoMessage()    {}
func (*GetVipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{45}
}

func (m *GetVipResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVipResponse.Unmarshal(m, b)
}
func (m *GetVipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVipResponse.Marshal(b, m, deterministic)
}
func (m *GetVipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVipResponse.Merge(m, src)
}
func (m *GetVipResponse) XXX_Size() int {
	return xxx_messageInfo_GetVipResponse.Size(m)
}
func (m *GetVipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVipResponse proto.InternalMessageInfo

func (m *GetVipResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetVipResponse) GetVipIp() *IpAddress {
	if m != nil {
		return m.VipIp
	}
	return nil
}

func (m *GetVipResponse) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type DeleteVipRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVipRequest) Reset()         { *m = DeleteVipRequest{} }
func (m *DeleteVipRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVipRequest) ProtoMessage()    {}
func (*DeleteVipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{46}
}

func (m *DeleteVipRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVipRequest.Unmarshal(m, b)
}
func (m *DeleteVipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVipRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVipRequest.Merge(m, src)
}
func (m *DeleteVipRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVipRequest.Size(m)
}
func (m *DeleteVipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVipRequest proto.InternalMessageInfo

func (m *DeleteVipRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

type DeleteVipResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVipResponse) Reset()         { *m = DeleteVipResponse{} }
func (m *DeleteVipResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVipResponse) ProtoMessage()    {}
func (*DeleteVipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{47}
}

func (m *DeleteVipResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVipResponse.Unmarshal(m, b)
}
func (m *DeleteVipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVipResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVipResponse.Merge(m, src)
}
func (m *DeleteVipResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVipResponse.Size(m)
}
func (m *DeleteVipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVipResponse proto.InternalMessageInfo

func (m *DeleteVipResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CreateLoadBalancerRequest struct {
	LoadbalancerId       []byte     `protobuf:"bytes,1,opt,name=loadbalancer_id,json=loadbalancerId,proto3" json:"loadbalancer_id,omitempty"`
	LoadbalancedIp       *IpAddress `protobuf:"bytes,2,opt,name=loadbalanced_ip,json=loadbalancedIp,proto3" json:"loadbalanced_ip,omitempty"`
	Vni                  uint32     `protobuf:"varint,3,opt,name=vni,proto3" json:"vni,omitempty"`
	LoadbalancedPorts    []*LbPort  `protobuf:"bytes,4,rep,name=loadbalanced_ports,json=loadbalancedPorts,proto3" json:"loadbalanced_ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateLoadBalancerRequest) Reset()         { *m = CreateLoadBalancerRequest{} }
func (m *CreateLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLoadBalancerRequest) ProtoMessage()    {}
func (*CreateLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{48}
}

func (m *CreateLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLoadBalancerRequest.Unmarshal(m, b)
}
func (m *CreateLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (m *CreateLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLoadBalancerRequest.Merge(m, src)
}
func (m *CreateLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLoadBalancerRequest.Size(m)
}
func (m *CreateLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLoadBalancerRequest proto.InternalMessageInfo

func (m *CreateLoadBalancerRequest) GetLoadbalancerId() []byte {
	if m != nil {
		return m.LoadbalancerId
	}
	return nil
}

func (m *CreateLoadBalancerRequest) GetLoadbalancedIp() *IpAddress {
	if m != nil {
		return m.LoadbalancedIp
	}
	return nil
}

func (m *CreateLoadBalancerRequest) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *CreateLoadBalancerRequest) GetLoadbalancedPorts() []*LbPort {
	if m != nil {
		return m.LoadbalancedPorts
	}
	return nil
}

type CreateLoadBalancerResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UnderlayRoute        []byte   `protobuf:"bytes,2,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLoadBalancerResponse) Reset()         { *m = CreateLoadBalancerResponse{} }
func (m *CreateLoadBalancerResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLoadBalancerResponse) ProtoMessage()    {}
func (*CreateLoadBalancerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{49}
}

func (m *CreateLoadBalancerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLoadBalancerResponse.Unmarshal(m, b)
}
func (m *CreateLoadBalancerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLoadBalancerResponse.Marshal(b, m, deterministic)
}
func (m *CreateLoadBalancerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLoadBalancerResponse.Merge(m, src)
}
func (m *CreateLoadBalancerResponse) XXX_Size() int {
	return xxx_messageInfo_CreateLoadBalancerResponse.Size(m)
}
func (m *CreateLoadBalancerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLoadBalancerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLoadBalancerResponse proto.InternalMessageInfo

func (m *CreateLoadBalancerResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateLoadBalancerResponse) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type GetLoadBalancerRequest struct {
	LoadbalancerId       []byte   `protobuf:"bytes,1,opt,name=loadbalancer_id,json=loadbalancerId,proto3" json:"loadbalancer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLoadBalancerRequest) Reset()         { *m = GetLoadBalancerRequest{} }
func (m *GetLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*GetLoadBalancerRequest) ProtoMessage()    {}
func (*GetLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{50}
}

func (m *GetLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLoadBalancerRequest.Unmarshal(m, b)
}
func (m *GetLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (m *GetLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLoadBalancerRequest.Merge(m, src)
}
func (m *GetLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_GetLoadBalancerRequest.Size(m)
}
func (m *GetLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLoadBalancerRequest proto.InternalMessageInfo

func (m *GetLoadBalancerRequest) GetLoadbalancerId() []byte {
	if m != nil {
		return m.LoadbalancerId
	}
	return nil
}

type GetLoadBalancerResponse struct {
	Status               *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	LoadbalancedIp       *IpAddress `protobuf:"bytes,2,opt,name=loadbalanced_ip,json=loadbalancedIp,proto3" json:"loadbalanced_ip,omitempty"`
	Vni                  uint32     `protobuf:"varint,3,opt,name=vni,proto3" json:"vni,omitempty"`
	LoadbalancedPorts    []*LbPort  `protobuf:"bytes,4,rep,name=loadbalanced_ports,json=loadbalancedPorts,proto3" json:"loadbalanced_ports,omitempty"`
	UnderlayRoute        []byte     `protobuf:"bytes,5,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetLoadBalancerResponse) Reset()         { *m = GetLoadBalancerResponse{} }
func (m *GetLoadBalancerResponse) String() string { return proto.CompactTextString(m) }
func (*GetLoadBalancerResponse) ProtoMessage()    {}
func (*GetLoadBalancerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{51}
}

func (m *GetLoadBalancerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLoadBalancerResponse.Unmarshal(m, b)
}
func (m *GetLoadBalancerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLoadBalancerResponse.Marshal(b, m, deterministic)
}
func (m *GetLoadBalancerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLoadBalancerResponse.Merge(m, src)
}
func (m *GetLoadBalancerResponse) XXX_Size() int {
	return xxx_messageInfo_GetLoadBalancerResponse.Size(m)
}
func (m *GetLoadBalancerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLoadBalancerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLoadBalancerResponse proto.InternalMessageInfo

func (m *GetLoadBalancerResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetLoadBalancerResponse) GetLoadbalancedIp() *IpAddress {
	if m != nil {
		return m.LoadbalancedIp
	}
	return nil
}

func (m *GetLoadBalancerResponse) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *GetLoadBalancerResponse) GetLoadbalancedPorts() []*LbPort {
	if m != nil {
		return m.LoadbalancedPorts
	}
	return nil
}

func (m *GetLoadBalancerResponse) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type DeleteLoadBalancerRequest struct {
	LoadbalancerId       []byte   `protobuf:"bytes,1,opt,name=loadbalancer_id,json=loadbalancerId,proto3" json:"loadbalancer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLoadBalancerRequest) Reset()         { *m = DeleteLoadBalancerRequest{} }
func (m *DeleteLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLoadBalancerRequest) ProtoMessage()    {}
func (*DeleteLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{52}
}

func (m *DeleteLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLoadBalancerRequest.Unmarshal(m, b)
}
func (m *DeleteLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLoadBalancerRequest.Merge(m, src)
}
func (m *DeleteLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLoadBalancerRequest.Size(m)
}
func (m *DeleteLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLoadBalancerRequest proto.InternalMessageInfo

func (m *DeleteLoadBalancerRequest) GetLoadbalancerId() []byte {
	if m != nil {
		return m.LoadbalancerId
	}
	return nil
}

type DeleteLoadBalancerResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLoadBalancerResponse) Reset()         { *m = DeleteLoadBalancerResponse{} }
func (m *DeleteLoadBalancerResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteLoadBalancerResponse) ProtoMessage()    {}
func (*DeleteLoadBalancerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{53}
}

func (m *DeleteLoadBalancerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLoadBalancerResponse.Unmarshal(m, b)
}
func (m *DeleteLoadBalancerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLoadBalancerResponse.Marshal(b, m, deterministic)
}
func (m *DeleteLoadBalancerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLoadBalancerResponse.Merge(m, src)
}
func (m *DeleteLoadBalancerResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteLoadBalancerResponse.Size(m)
}
func (m *DeleteLoadBalancerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLoadBalancerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLoadBalancerResponse proto.InternalMessageInfo

func (m *DeleteLoadBalancerResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CreateLoadBalancerTargetRequest struct {
	LoadbalancerId       []byte     `protobuf:"bytes,1,opt,name=loadbalancer_id,json=loadbalancerId,proto3" json:"loadbalancer_id,omitempty"`
	TargetIp             *IpAddress `protobuf:"bytes,2,opt,name=target_ip,json=targetIp,proto3" json:"target_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateLoadBalancerTargetRequest) Reset()         { *m = CreateLoadBalancerTargetRequest{} }
func (m *CreateLoadBalancerTargetRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLoadBalancerTargetRequest) ProtoMessage()    {}
func (*CreateLoadBalancerTargetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{54}
}

func (m *CreateLoadBalancerTargetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLoadBalancerTargetRequest.Unmarshal(m, b)
}
func (m *CreateLoadBalancerTargetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLoadBalancerTargetRequest.Marshal(b, m, deterministic)
}
func (m *CreateLoadBalancerTargetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLoadBalancerTargetRequest.Merge(m, src)
}
func (m *CreateLoadBalancerTargetRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLoadBalancerTargetRequest.Size(m)
}
func (m *CreateLoadBalancerTargetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLoadBalancerTargetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLoadBalancerTargetRequest proto.InternalMessageInfo

func (m *CreateLoadBalancerTargetRequest) GetLoadbalancerId() []byte {
	if m != nil {
		return m.LoadbalancerId
	}
	return nil
}

func (m *CreateLoadBalancerTargetRequest) GetTargetIp() *IpAddress {
	if m != nil {
		return m.TargetIp
	}
	return nil
}

type CreateLoadBalancerTargetResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLoadBalancerTargetResponse) Reset()         { *m = CreateLoadBalancerTargetResponse{} }
func (m *CreateLoadBalancerTargetResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLoadBalancerTargetResponse) ProtoMessage()    {}
func (*CreateLoadBalancerTargetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{55}
}

func (m *CreateLoadBalancerTargetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLoadBalancerTargetResponse.Unmarshal(m, b)
}
func (m *CreateLoadBalancerTargetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLoadBalancerTargetResponse.Marshal(b, m, deterministic)
}
func (m *CreateLoadBalancerTargetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLoadBalancerTargetResponse.Merge(m, src)
}
func (m *CreateLoadBalancerTargetResponse) XXX_Size() int {
	return xxx_messageInfo_CreateLoadBalancerTargetResponse.Size(m)
}
func (m *CreateLoadBalancerTargetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLoadBalancerTargetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLoadBalancerTargetResponse proto.InternalMessageInfo

func (m *CreateLoadBalancerTargetResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListLoadBalancerTargetsRequest struct {
	LoadbalancerId       []byte   `protobuf:"bytes,1,opt,name=loadbalancer_id,json=loadbalancerId,proto3" json:"loadbalancer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLoadBalancerTargetsRequest) Reset()         { *m = ListLoadBalancerTargetsRequest{} }
func (m *ListLoadBalancerTargetsRequest) String() string { return proto.CompactTextString(m) }
func (*ListLoadBalancerTargetsRequest) ProtoMessage()    {}
func (*ListLoadBalancerTargetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{56}
}

func (m *ListLoadBalancerTargetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLoadBalancerTargetsRequest.Unmarshal(m, b)
}
func (m *ListLoadBalancerTargetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLoadBalancerTargetsRequest.Marshal(b, m, deterministic)
}
func (m *ListLoadBalancerTargetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLoadBalancerTargetsRequest.Merge(m, src)
}
func (m *ListLoadBalancerTargetsRequest) XXX_Size() int {
	return xxx_messageInfo_ListLoadBalancerTargetsRequest.Size(m)
}
func (m *ListLoadBalancerTargetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLoadBalancerTargetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLoadBalancerTargetsRequest proto.InternalMessageInfo

func (m *ListLoadBalancerTargetsRequest) GetLoadbalancerId() []byte {
	if m != nil {
		return m.LoadbalancerId
	}
	return nil
}

type ListLoadBalancerTargetsResponse struct {
	Status               *Status      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TargetIps            []*IpAddress `protobuf:"bytes,2,rep,name=target_ips,json=targetIps,proto3" json:"target_ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListLoadBalancerTargetsResponse) Reset()         { *m = ListLoadBalancerTargetsResponse{} }
func (m *ListLoadBalancerTargetsResponse) String() string { return proto.CompactTextString(m) }
func (*ListLoadBalancerTargetsResponse) ProtoMessage()    {}
func (*ListLoadBalancerTargetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{57}
}

func (m *ListLoadBalancerTargetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLoadBalancerTargetsResponse.Unmarshal(m, b)
}
func (m *ListLoadBalancerTargetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLoadBalancerTargetsResponse.Marshal(b, m, deterministic)
}
func (m *ListLoadBalancerTargetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLoadBalancerTargetsResponse.Merge(m, src)
}
func (m *ListLoadBalancerTargetsResponse) XXX_Size() int {
	return xxx_messageInfo_ListLoadBalancerTargetsResponse.Size(m)
}
func (m *ListLoadBalancerTargetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLoadBalancerTargetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLoadBalancerTargetsResponse proto.InternalMessageInfo

func (m *ListLoadBalancerTargetsResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListLoadBalancerTargetsResponse) GetTargetIps() []*IpAddress {
	if m != nil {
		return m.TargetIps
	}
	return nil
}

type DeleteLoadBalancerTargetRequest struct {
	LoadbalancerId       []byte     `protobuf:"bytes,1,opt,name=loadbalancer_id,json=loadbalancerId,proto3" json:"loadbalancer_id,omitempty"`
	TargetIp             *IpAddress `protobuf:"bytes,2,opt,name=target_ip,json=targetIp,proto3" json:"target_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeleteLoadBalancerTargetRequest) Reset()         { *m = DeleteLoadBalancerTargetRequest{} }
func (m *DeleteLoadBalancerTargetRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLoadBalancerTargetRequest) ProtoMessage()    {}
func (*DeleteLoadBalancerTargetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{58}
}

func (m *DeleteLoadBalancerTargetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLoadBalancerTargetRequest.Unmarshal(m, b)
}
func (m *DeleteLoadBalancerTargetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLoadBalancerTargetRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLoadBalancerTargetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLoadBalancerTargetRequest.Merge(m, src)
}
func (m *DeleteLoadBalancerTargetRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLoadBalancerTargetRequest.Size(m)
}
func (m *DeleteLoadBalancerTargetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLoadBalancerTargetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLoadBalancerTargetRequest proto.InternalMessageInfo

func (m *DeleteLoadBalancerTargetRequest) GetLoadbalancerId() []byte {
	if m != nil {
		return m.LoadbalancerId
	}
	return nil
}

func (m *DeleteLoadBalancerTargetRequest) GetTargetIp() *IpAddress {
	if m != nil {
		return m.TargetIp
	}
	return nil
}

type DeleteLoadBalancerTargetResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLoadBalancerTargetResponse) Reset()         { *m = DeleteLoadBalancerTargetResponse{} }
func (m *DeleteLoadBalancerTargetResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteLoadBalancerTargetResponse) ProtoMessage()    {}
func (*DeleteLoadBalancerTargetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{59}
}

func (m *DeleteLoadBalancerTargetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLoadBalancerTargetResponse.Unmarshal(m, b)
}
func (m *DeleteLoadBalancerTargetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLoadBalancerTargetResponse.Marshal(b, m, deterministic)
}
func (m *DeleteLoadBalancerTargetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLoadBalancerTargetResponse.Merge(m, src)
}
func (m *DeleteLoadBalancerTargetResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteLoadBalancerTargetResponse.Size(m)
}
func (m *DeleteLoadBalancerTargetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLoadBalancerTargetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLoadBalancerTargetResponse proto.InternalMessageInfo

func (m *DeleteLoadBalancerTargetResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CreateNatRequest struct {
	InterfaceId          []byte     `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	NatIp                *IpAddress `protobuf:"bytes,2,opt,name=nat_ip,json=natIp,proto3" json:"nat_ip,omitempty"`
	MinPort              uint32     `protobuf:"varint,3,opt,name=min_port,json=minPort,proto3" json:"min_port,omitempty"`
	MaxPort              uint32     `protobuf:"varint,4,opt,name=max_port,json=maxPort,proto3" json:"max_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateNatRequest) Reset()         { *m = CreateNatRequest{} }
func (m *CreateNatRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNatRequest) ProtoMessage()    {}
func (*CreateNatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{60}
}

func (m *CreateNatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNatRequest.Unmarshal(m, b)
}
func (m *CreateNatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNatRequest.Marshal(b, m, deterministic)
}
func (m *CreateNatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNatRequest.Merge(m, src)
}
func (m *CreateNatRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNatRequest.Size(m)
}
func (m *CreateNatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNatRequest proto.InternalMessageInfo

func (m *CreateNatRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *CreateNatRequest) GetNatIp() *IpAddress {
	if m != nil {
		return m.NatIp
	}
	return nil
}

func (m *CreateNatRequest) GetMinPort() uint32 {
	if m != nil {
		return m.MinPort
	}
	return 0
}

func (m *CreateNatRequest) GetMaxPort() uint32 {
	if m != nil {
		return m.MaxPort
	}
	return 0
}

type CreateNatResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UnderlayRoute        []byte   `protobuf:"bytes,2,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNatResponse) Reset()         { *m = CreateNatResponse{} }
func (m *CreateNatResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNatResponse) ProtoMessage()    {}
func (*CreateNatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{61}
}

func (m *CreateNatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNatResponse.Unmarshal(m, b)
}
func (m *CreateNatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNatResponse.Marshal(b, m, deterministic)
}
func (m *CreateNatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNatResponse.Merge(m, src)
}
func (m *CreateNatResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNatResponse.Size(m)
}
func (m *CreateNatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNatResponse proto.InternalMessageInfo

func (m *CreateNatResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateNatResponse) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type GetNatRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNatRequest) Reset()         { *m = GetNatRequest{} }
func (m *GetNatRequest) String() string { return proto.CompactTextString(m) }
func (*GetNatRequest) ProtoMessage()    {}
func (*GetNatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{62}
}

func (m *GetNatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNatRequest.Unmarshal(m, b)
}
func (m *GetNatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNatRequest.Marshal(b, m, deterministic)
}
func (m *GetNatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNatRequest.Merge(m, src)
}
func (m *GetNatRequest) XXX_Size() int {
	return xxx_messageInfo_GetNatRequest.Size(m)
}
func (m *GetNatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNatRequest proto.InternalMessageInfo

func (m *GetNatRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

type GetNatResponse struct {
	Status               *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NatIp                *IpAddress `protobuf:"bytes,2,opt,name=nat_ip,json=natIp,proto3" json:"nat_ip,omitempty"`
	MinPort              uint32     `protobuf:"varint,3,opt,name=min_port,json=minPort,proto3" json:"min_port,omitempty"`
	MaxPort              uint32     `protobuf:"varint,4,opt,name=max_port,json=maxPort,proto3" json:"max_port,omitempty"`
	UnderlayRoute        []byte     `protobuf:"bytes,5,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetNatResponse) Reset()         { *m = GetNatResponse{} }
func (m *GetNatResponse) String() string { return proto.CompactTextString(m) }
func (*GetNatResponse) ProtoMessage()    {}
func (*GetNatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{63}
}

func (m *GetNatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNatResponse.Unmarshal(m, b)
}
func (m *GetNatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNatResponse.Marshal(b, m, deterministic)
}
func (m *GetNatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNatResponse.Merge(m, src)
}
func (m *GetNatResponse) XXX_Size() int {
	return xxx_messageInfo_GetNatResponse.Size(m)
}
func (m *GetNatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNatResponse proto.InternalMessageInfo

func (m *GetNatResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetNatResponse) GetNatIp() *IpAddress {
	if m != nil {
		return m.NatIp
	}
	return nil
}

func (m *GetNatResponse) GetMinPort() uint32 {
	if m != nil {
		return m.MinPort
	}
	return 0
}

func (m *GetNatResponse) GetMaxPort() uint32 {
	if m != nil {
		return m.MaxPort
	}
	return 0
}

func (m *GetNatResponse) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type DeleteNatRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNatRequest) Reset()         { *m = DeleteNatRequest{} }
func (m *DeleteNatRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNatRequest) ProtoMessage()    {}
func (*DeleteNatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{64}
}

func (m *DeleteNatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNatRequest.Unmarshal(m, b)
}
func (m *DeleteNatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNatRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNatRequest.Merge(m, src)
}
func (m *DeleteNatRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNatRequest.Size(m)
}
func (m *DeleteNatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNatRequest proto.InternalMessageInfo

func (m *DeleteNatRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

type DeleteNatResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNatResponse) Reset()         { *m = DeleteNatResponse{} }
func (m *DeleteNatResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNatResponse) ProtoMessage()    {}
func (*DeleteNatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{65}
}

func (m *DeleteNatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNatResponse.Unmarshal(m, b)
}
func (m *DeleteNatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNatResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNatResponse.Merge(m, src)
}
func (m *DeleteNatResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNatResponse.Size(m)
}
func (m *DeleteNatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNatResponse proto.InternalMessageInfo

func (m *DeleteNatResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CreateNeighborNatRequest struct {
	NatIp                *IpAddress `protobuf:"bytes,1,opt,name=nat_ip,json=natIp,proto3" json:"nat_ip,omitempty"`
	Vni                  uint32     `protobuf:"varint,2,opt,name=vni,proto3" json:"vni,omitempty"`
	MinPort              uint32     `protobuf:"varint,3,opt,name=min_port,json=minPort,proto3" json:"min_port,omitempty"`
	MaxPort              uint32     `protobuf:"varint,4,opt,name=max_port,json=maxPort,proto3" json:"max_port,omitempty"`
	UnderlayRoute        []byte     `protobuf:"bytes,5,opt,name=underlay_route,json=underlayRoute,proto3" json:"underlay_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateNeighborNatRequest) Reset()         { *m = CreateNeighborNatRequest{} }
func (m *CreateNeighborNatRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNeighborNatRequest) ProtoMessage()    {}
func (*CreateNeighborNatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{66}
}

func (m *CreateNeighborNatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNeighborNatRequest.Unmarshal(m, b)
}
func (m *CreateNeighborNatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNeighborNatRequest.Marshal(b, m, deterministic)
}
func (m *CreateNeighborNatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNeighborNatRequest.Merge(m, src)
}
func (m *CreateNeighborNatRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNeighborNatRequest.Size(m)
}
func (m *CreateNeighborNatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNeighborNatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNeighborNatRequest proto.InternalMessageInfo

func (m *CreateNeighborNatRequest) GetNatIp() *IpAddress {
	if m != nil {
		return m.NatIp
	}
	return nil
}

func (m *CreateNeighborNatRequest) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *CreateNeighborNatRequest) GetMinPort() uint32 {
	if m != nil {
		return m.MinPort
	}
	return 0
}

func (m *CreateNeighborNatRequest) GetMaxPort() uint32 {
	if m != nil {
		return m.MaxPort
	}
	return 0
}

func (m *CreateNeighborNatRequest) GetUnderlayRoute() []byte {
	if m != nil {
		return m.UnderlayRoute
	}
	return nil
}

type CreateNeighborNatResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNeighborNatResponse) Reset()         { *m = CreateNeighborNatResponse{} }
func (m *CreateNeighborNatResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNeighborNatResponse) ProtoMessage()    {}
func (*CreateNeighborNatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{67}
}

func (m *CreateNeighborNatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNeighborNatResponse.Unmarshal(m, b)
}
func (m *CreateNeighborNatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNeighborNatResponse.Marshal(b, m, deterministic)
}
func (m *CreateNeighborNatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNeighborNatResponse.Merge(m, src)
}
func (m *CreateNeighborNatResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNeighborNatResponse.Size(m)
}
func (m *CreateNeighborNatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNeighborNatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNeighborNatResponse proto.InternalMessageInfo

func (m *CreateNeighborNatResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type DeleteNeighborNatRequest struct {
	NatIp                *IpAddress `protobuf:"bytes,1,opt,name=nat_ip,json=natIp,proto3" json:"nat_ip,omitempty"`
	Vni                  uint32     `protobuf:"varint,2,opt,name=vni,proto3" json:"vni,omitempty"`
	MinPort              uint32     `protobuf:"varint,3,opt,name=min_port,json=minPort,proto3" json:"min_port,omitempty"`
	MaxPort              uint32     `protobuf:"varint,4,opt,name=max_port,json=maxPort,proto3" json:"max_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeleteNeighborNatRequest) Reset()         { *m = DeleteNeighborNatRequest{} }
func (m *DeleteNeighborNatRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNeighborNatRequest) ProtoMessage()    {}
func (*DeleteNeighborNatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{68}
}

func (m *DeleteNeighborNatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNeighborNatRequest.Unmarshal(m, b)
}
func (m *DeleteNeighborNatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNeighborNatRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNeighborNatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNeighborNatRequest.Merge(m, src)
}
func (m *DeleteNeighborNatRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNeighborNatRequest.Size(m)
}
func (m *DeleteNeighborNatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNeighborNatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNeighborNatRequest proto.InternalMessageInfo

func (m *DeleteNeighborNatRequest) GetNatIp() *IpAddress {
	if m != nil {
		return m.NatIp
	}
	return nil
}

func (m *DeleteNeighborNatRequest) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *DeleteNeighborNatRequest) GetMinPort() uint32 {
	if m != nil {
		return m.MinPort
	}
	return 0
}

func (m *DeleteNeighborNatRequest) GetMaxPort() uint32 {
	if m != nil {
		return m.MaxPort
	}
	return 0
}

type DeleteNeighborNatResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNeighborNatResponse) Reset()         { *m = DeleteNeighborNatResponse{} }
func (m *DeleteNeighborNatResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNeighborNatResponse) ProtoMessage()    {}
func (*DeleteNeighborNatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{69}
}

func (m *DeleteNeighborNatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNeighborNatResponse.Unmarshal(m, b)
}
func (m *DeleteNeighborNatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNeighborNatResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNeighborNatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNeighborNatResponse.Merge(m, src)
}
func (m *DeleteNeighborNatResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNeighborNatResponse.Size(m)
}
func (m *DeleteNeighborNatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNeighborNatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNeighborNatResponse proto.InternalMessageInfo

func (m *DeleteNeighborNatResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListLocalNatsRequest struct {
	NatIp                *IpAddress `protobuf:"bytes,1,opt,name=nat_ip,json=natIp,proto3" json:"nat_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListLocalNatsRequest) Reset()         { *m = ListLocalNatsRequest{} }
func (m *ListLocalNatsRequest) String() string { return proto.CompactTextString(m) }
func (*ListLocalNatsRequest) ProtoMessage()    {}
func (*ListLocalNatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{70}
}

func (m *ListLocalNatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLocalNatsRequest.Unmarshal(m, b)
}
func (m *ListLocalNatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLocalNatsRequest.Marshal(b, m, deterministic)
}
func (m *ListLocalNatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLocalNatsRequest.Merge(m, src)
}
func (m *ListLocalNatsRequest) XXX_Size() int {
	return xxx_messageInfo_ListLocalNatsRequest.Size(m)
}
func (m *ListLocalNatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLocalNatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLocalNatsRequest proto.InternalMessageInfo

func (m *ListLocalNatsRequest) GetNatIp() *IpAddress {
	if m != nil {
		return m.NatIp
	}
	return nil
}

type ListLocalNatsResponse struct {
	Status               *Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NatEntries           []*NatEntry `protobuf:"bytes,2,rep,name=nat_entries,json=natEntries,proto3" json:"nat_entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListLocalNatsResponse) Reset()         { *m = ListLocalNatsResponse{} }
func (m *ListLocalNatsResponse) String() string { return proto.CompactTextString(m) }
func (*ListLocalNatsResponse) ProtoMessage()    {}
func (*ListLocalNatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{71}
}

func (m *ListLocalNatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLocalNatsResponse.Unmarshal(m, b)
}
func (m *ListLocalNatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLocalNatsResponse.Marshal(b, m, deterministic)
}
func (m *ListLocalNatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLocalNatsResponse.Merge(m, src)
}
func (m *ListLocalNatsResponse) XXX_Size() int {
	return xxx_messageInfo_ListLocalNatsResponse.Size(m)
}
func (m *ListLocalNatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLocalNatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLocalNatsResponse proto.InternalMessageInfo

func (m *ListLocalNatsResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListLocalNatsResponse) GetNatEntries() []*NatEntry {
	if m != nil {
		return m.NatEntries
	}
	return nil
}

type ListNeighborNatsRequest struct {
	NatIp                *IpAddress `protobuf:"bytes,1,opt,name=nat_ip,json=natIp,proto3" json:"nat_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListNeighborNatsRequest) Reset()         { *m = ListNeighborNatsRequest{} }
func (m *ListNeighborNatsRequest) String() string { return proto.CompactTextString(m) }
func (*ListNeighborNatsRequest) ProtoMessage()    {}
func (*ListNeighborNatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{72}
}

func (m *ListNeighborNatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNeighborNatsRequest.Unmarshal(m, b)
}
func (m *ListNeighborNatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNeighborNatsRequest.Marshal(b, m, deterministic)
}
func (m *ListNeighborNatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNeighborNatsRequest.Merge(m, src)
}
func (m *ListNeighborNatsRequest) XXX_Size() int {
	return xxx_messageInfo_ListNeighborNatsRequest.Size(m)
}
func (m *ListNeighborNatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNeighborNatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNeighborNatsRequest proto.InternalMessageInfo

func (m *ListNeighborNatsRequest) GetNatIp() *IpAddress {
	if m != nil {
		return m.NatIp
	}
	return nil
}

type ListNeighborNatsResponse struct {
	Status               *Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NatEntries           []*NatEntry `protobuf:"bytes,2,rep,name=nat_entries,json=natEntries,proto3" json:"nat_entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListNeighborNatsResponse) Reset()         { *m = ListNeighborNatsResponse{} }
func (m *ListNeighborNatsResponse) String() string { return proto.CompactTextString(m) }
func (*ListNeighborNatsResponse) ProtoMessage()    {}
func (*ListNeighborNatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{73}
}

func (m *ListNeighborNatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNeighborNatsResponse.Unmarshal(m, b)
}
func (m *ListNeighborNatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNeighborNatsResponse.Marshal(b, m, deterministic)
}
func (m *ListNeighborNatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNeighborNatsResponse.Merge(m, src)
}
func (m *ListNeighborNatsResponse) XXX_Size() int {
	return xxx_messageInfo_ListNeighborNatsResponse.Size(m)
}
func (m *ListNeighborNatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNeighborNatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNeighborNatsResponse proto.InternalMessageInfo

func (m *ListNeighborNatsResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListNeighborNatsResponse) GetNatEntries() []*NatEntry {
	if m != nil {
		return m.NatEntries
	}
	return nil
}

type ListRoutesRequest struct {
	Vni                  uint32   `protobuf:"varint,1,opt,name=vni,proto3" json:"vni,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoutesRequest) Reset()         { *m = ListRoutesRequest{} }
func (m *ListRoutesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRoutesRequest) ProtoMessage()    {}
func (*ListRoutesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{74}
}

func (m *ListRoutesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoutesRequest.Unmarshal(m, b)
}
func (m *ListRoutesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoutesRequest.Marshal(b, m, deterministic)
}
func (m *ListRoutesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoutesRequest.Merge(m, src)
}
func (m *ListRoutesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRoutesRequest.Size(m)
}
func (m *ListRoutesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoutesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoutesRequest proto.InternalMessageInfo

func (m *ListRoutesRequest) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

type ListRoutesResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Routes               []*Route `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoutesResponse) Reset()         { *m = ListRoutesResponse{} }
func (m *ListRoutesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRoutesResponse) ProtoMessage()    {}
func (*ListRoutesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{75}
}

func (m *ListRoutesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoutesResponse.Unmarshal(m, b)
}
func (m *ListRoutesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoutesResponse.Marshal(b, m, deterministic)
}
func (m *ListRoutesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoutesResponse.Merge(m, src)
}
func (m *ListRoutesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRoutesResponse.Size(m)
}
func (m *ListRoutesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoutesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoutesResponse proto.InternalMessageInfo

func (m *ListRoutesResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListRoutesResponse) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type CreateRouteRequest struct {
	Vni                  uint32   `protobuf:"varint,1,opt,name=vni,proto3" json:"vni,omitempty"`
	Route                *Route   `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRouteRequest) Reset()         { *m = CreateRouteRequest{} }
func (m *CreateRouteRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRouteRequest) ProtoMessage()    {}
func (*CreateRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{76}
}

func (m *CreateRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRouteRequest.Unmarshal(m, b)
}
func (m *CreateRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRouteRequest.Marshal(b, m, deterministic)
}
func (m *CreateRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRouteRequest.Merge(m, src)
}
func (m *CreateRouteRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRouteRequest.Size(m)
}
func (m *CreateRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRouteRequest proto.InternalMessageInfo

func (m *CreateRouteRequest) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *CreateRouteRequest) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type CreateRouteResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRouteResponse) Reset()         { *m = CreateRouteResponse{} }
func (m *CreateRouteResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRouteResponse) ProtoMessage()    {}
func (*CreateRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{77}
}

func (m *CreateRouteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRouteResponse.Unmarshal(m, b)
}
func (m *CreateRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRouteResponse.Marshal(b, m, deterministic)
}
func (m *CreateRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRouteResponse.Merge(m, src)
}
func (m *CreateRouteResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRouteResponse.Size(m)
}
func (m *CreateRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRouteResponse proto.InternalMessageInfo

func (m *CreateRouteResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type DeleteRouteRequest struct {
	Vni                  uint32   `protobuf:"varint,1,opt,name=vni,proto3" json:"vni,omitempty"`
	Route                *Route   `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRouteRequest) Reset()         { *m = DeleteRouteRequest{} }
func (m *DeleteRouteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRouteRequest) ProtoMessage()    {}
func (*DeleteRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{78}
}

func (m *DeleteRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRouteRequest.Unmarshal(m, b)
}
func (m *DeleteRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRouteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRouteRequest.Merge(m, src)
}
func (m *DeleteRouteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRouteRequest.Size(m)
}
func (m *DeleteRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRouteRequest proto.InternalMessageInfo

func (m *DeleteRouteRequest) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *DeleteRouteRequest) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type DeleteRouteResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRouteResponse) Reset()         { *m = DeleteRouteResponse{} }
func (m *DeleteRouteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRouteResponse) ProtoMessage()    {}
func (*DeleteRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{79}
}

func (m *DeleteRouteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRouteResponse.Unmarshal(m, b)
}
func (m *DeleteRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRouteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRouteResponse.Merge(m, src)
}
func (m *DeleteRouteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRouteResponse.Size(m)
}
func (m *DeleteRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRouteResponse proto.InternalMessageInfo

func (m *DeleteRouteResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CheckVniInUseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vni  uint32  `protobuf:"varint,1,opt,name=vni,proto3" json:"vni,omitempty"`
	Type VniType `protobuf:"varint,2,opt,name=type,proto3,enum=dpdkironcore.v1.VniType" json:"type,omitempty"`
}

func (m *CheckVniInUseRequest) Reset()         { *m = CheckVniInUseRequest{} }
func (m *CheckVniInUseRequest) String() string { return proto.CompactTextString(m) }
func (*CheckVniInUseRequest) ProtoMessage()    {}
func (*CheckVniInUseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{80}
}

func (m *CheckVniInUseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckVniInUseRequest.Unmarshal(m, b)
}
func (m *CheckVniInUseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckVniInUseRequest.Marshal(b, m, deterministic)
}
func (m *CheckVniInUseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckVniInUseRequest.Merge(m, src)
}
func (m *CheckVniInUseRequest) XXX_Size() int {
	return xxx_messageInfo_CheckVniInUseRequest.Size(m)
}
func (m *CheckVniInUseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckVniInUseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckVniInUseRequest proto.InternalMessageInfo

func (m *CheckVniInUseRequest) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *CheckVniInUseRequest) GetType() VniType {
	if m != nil {
		return m.Type
	}
	return VniType_VNI_IPV4
}

type CheckVniInUseResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	InUse                bool     `protobuf:"varint,2,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckVniInUseResponse) Reset()         { *m = CheckVniInUseResponse{} }
func (m *CheckVniInUseResponse) String() string { return proto.CompactTextString(m) }
func (*CheckVniInUseResponse) ProtoMessage()    {}
func (*CheckVniInUseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{81}
}

func (m *CheckVniInUseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckVniInUseResponse.Unmarshal(m, b)
}
func (m *CheckVniInUseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckVniInUseResponse.Marshal(b, m, deterministic)
}
func (m *CheckVniInUseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckVniInUseResponse.Merge(m, src)
}
func (m *CheckVniInUseResponse) XXX_Size() int {
	return xxx_messageInfo_CheckVniInUseResponse.Size(m)
}
func (m *CheckVniInUseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckVniInUseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckVniInUseResponse proto.InternalMessageInfo

func (m *CheckVniInUseResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CheckVniInUseResponse) GetInUse() bool {
	if m != nil {
		return m.InUse
	}
	return false
}

type ResetVniRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vni  uint32  `protobuf:"varint,1,opt,name=vni,proto3" json:"vni,omitempty"`
	Type VniType `protobuf:"varint,2,opt,name=type,proto3,enum=dpdkironcore.v1.VniType" json:"type,omitempty"`
}

func (m *ResetVniRequest) Reset()         { *m = ResetVniRequest{} }
func (m *ResetVniRequest) String() string { return proto.CompactTextString(m) }
func (*ResetVniRequest) ProtoMessage()    {}
func (*ResetVniRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{82}
}

func (m *ResetVniRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetVniRequest.Unmarshal(m, b)
}
func (m *ResetVniRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetVniRequest.Marshal(b, m, deterministic)
}
func (m *ResetVniRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetVniRequest.Merge(m, src)
}
func (m *ResetVniRequest) XXX_Size() int {
	return xxx_messageInfo_ResetVniRequest.Size(m)
}
func (m *ResetVniRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetVniRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetVniRequest proto.InternalMessageInfo

func (m *ResetVniRequest) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *ResetVniRequest) GetType() VniType {
	if m != nil {
		return m.Type
	}
	return VniType_VNI_IPV4
}

type ResetVniResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetVniResponse) Reset()         { *m = ResetVniResponse{} }
func (m *ResetVniResponse) String() string { return proto.CompactTextString(m) }
func (*ResetVniResponse) ProtoMessage()    {}
func (*ResetVniResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{83}
}

func (m *ResetVniResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetVniResponse.Unmarshal(m, b)
}
func (m *ResetVniResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetVniResponse.Marshal(b, m, deterministic)
}
func (m *ResetVniResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetVniResponse.Merge(m, src)
}
func (m *ResetVniResponse) XXX_Size() int {
	return xxx_messageInfo_ResetVniResponse.Size(m)
}
func (m *ResetVniResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetVniResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetVniResponse proto.InternalMessageInfo

func (m *ResetVniResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListFirewallRulesRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFirewallRulesRequest) Reset()         { *m = ListFirewallRulesRequest{} }
func (m *ListFirewallRulesRequest) String() string { return proto.CompactTextString(m) }
func (*ListFirewallRulesRequest) ProtoMessage()    {}
func (*ListFirewallRulesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{84}
}

func (m *ListFirewallRulesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFirewallRulesRequest.Unmarshal(m, b)
}
func (m *ListFirewallRulesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFirewallRulesRequest.Marshal(b, m, deterministic)
}
func (m *ListFirewallRulesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFirewallRulesRequest.Merge(m, src)
}
func (m *ListFirewallRulesRequest) XXX_Size() int {
	return xxx_messageInfo_ListFirewallRulesRequest.Size(m)
}
func (m *ListFirewallRulesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFirewallRulesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFirewallRulesRequest proto.InternalMessageInfo

func (m *ListFirewallRulesRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

type ListFirewallRulesResponse struct {
	Status               *Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Rules                []*FirewallRule `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListFirewallRulesResponse) Reset()         { *m = ListFirewallRulesResponse{} }
func (m *ListFirewallRulesResponse) String() string { return proto.CompactTextString(m) }
func (*ListFirewallRulesResponse) ProtoMessage()    {}
func (*ListFirewallRulesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{85}
}

func (m *ListFirewallRulesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFirewallRulesResponse.Unmarshal(m, b)
}
func (m *ListFirewallRulesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFirewallRulesResponse.Marshal(b, m, deterministic)
}
func (m *ListFirewallRulesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFirewallRulesResponse.Merge(m, src)
}
func (m *ListFirewallRulesResponse) XXX_Size() int {
	return xxx_messageInfo_ListFirewallRulesResponse.Size(m)
}
func (m *ListFirewallRulesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFirewallRulesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFirewallRulesResponse proto.InternalMessageInfo

func (m *ListFirewallRulesResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListFirewallRulesResponse) GetRules() []*FirewallRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type CreateFirewallRuleRequest struct {
	InterfaceId          []byte        `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	Rule                 *FirewallRule `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateFirewallRuleRequest) Reset()         { *m = CreateFirewallRuleRequest{} }
func (m *CreateFirewallRuleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateFirewallRuleRequest) ProtoMessage()    {}
func (*CreateFirewallRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{86}
}

func (m *CreateFirewallRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFirewallRuleRequest.Unmarshal(m, b)
}
func (m *CreateFirewallRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFirewallRuleRequest.Marshal(b, m, deterministic)
}
func (m *CreateFirewallRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFirewallRuleRequest.Merge(m, src)
}
func (m *CreateFirewallRuleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateFirewallRuleRequest.Size(m)
}
func (m *CreateFirewallRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFirewallRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFirewallRuleRequest proto.InternalMessageInfo

func (m *CreateFirewallRuleRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *CreateFirewallRuleRequest) GetRule() *FirewallRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

type CreateFirewallRuleResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	RuleId               []byte   `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateFirewallRuleResponse) Reset()         { *m = CreateFirewallRuleResponse{} }
func (m *CreateFirewallRuleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateFirewallRuleResponse) ProtoMessage()    {}
func (*CreateFirewallRuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{87}
}

func (m *CreateFirewallRuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFirewallRuleResponse.Unmarshal(m, b)
}
func (m *CreateFirewallRuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFirewallRuleResponse.Marshal(b, m, deterministic)
}
func (m *CreateFirewallRuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFirewallRuleResponse.Merge(m, src)
}
func (m *CreateFirewallRuleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateFirewallRuleResponse.Size(m)
}
func (m *CreateFirewallRuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFirewallRuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFirewallRuleResponse proto.InternalMessageInfo

func (m *CreateFirewallRuleResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateFirewallRuleResponse) GetRuleId() []byte {
	if m != nil {
		return m.RuleId
	}
	return nil
}

type GetFirewallRuleRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	RuleId               []byte   `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFirewallRuleRequest) Reset()         { *m = GetFirewallRuleRequest{} }
func (m *GetFirewallRuleRequest) String() string { return proto.CompactTextString(m) }
func (*GetFirewallRuleRequest) ProtoMessage()    {}
func (*GetFirewallRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{88}
}

func (m *GetFirewallRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFirewallRuleRequest.Unmarshal(m, b)
}
func (m *GetFirewallRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFirewallRuleRequest.Marshal(b, m, deterministic)
}
func (m *GetFirewallRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFirewallRuleRequest.Merge(m, src)
}
func (m *GetFirewallRuleRequest) XXX_Size() int {
	return xxx_messageInfo_GetFirewallRuleRequest.Size(m)
}
func (m *GetFirewallRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFirewallRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFirewallRuleRequest proto.InternalMessageInfo

func (m *GetFirewallRuleRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *GetFirewallRuleRequest) GetRuleId() []byte {
	if m != nil {
		return m.RuleId
	}
	return nil
}

type GetFirewallRuleResponse struct {
	Status               *Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Rule                 *FirewallRule `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetFirewallRuleResponse) Reset()         { *m = GetFirewallRuleResponse{} }
func (m *GetFirewallRuleResponse) String() string { return proto.CompactTextString(m) }
func (*GetFirewallRuleResponse) ProtoMessage()    {}
func (*GetFirewallRuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{89}
}

func (m *GetFirewallRuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFirewallRuleResponse.Unmarshal(m, b)
}
func (m *GetFirewallRuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFirewallRuleResponse.Marshal(b, m, deterministic)
}
func (m *GetFirewallRuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFirewallRuleResponse.Merge(m, src)
}
func (m *GetFirewallRuleResponse) XXX_Size() int {
	return xxx_messageInfo_GetFirewallRuleResponse.Size(m)
}
func (m *GetFirewallRuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFirewallRuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFirewallRuleResponse proto.InternalMessageInfo

func (m *GetFirewallRuleResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetFirewallRuleResponse) GetRule() *FirewallRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

type DeleteFirewallRuleRequest struct {
	InterfaceId          []byte   `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	RuleId               []byte   `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFirewallRuleRequest) Reset()         { *m = DeleteFirewallRuleRequest{} }
func (m *DeleteFirewallRuleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteFirewallRuleRequest) ProtoMessage()    {}
func (*DeleteFirewallRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{90}
}

func (m *DeleteFirewallRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFirewallRuleRequest.Unmarshal(m, b)
}
func (m *DeleteFirewallRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFirewallRuleRequest.Marshal(b, m, deterministic)
}
func (m *DeleteFirewallRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFirewallRuleRequest.Merge(m, src)
}
func (m *DeleteFirewallRuleRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteFirewallRuleRequest.Size(m)
}
func (m *DeleteFirewallRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFirewallRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFirewallRuleRequest proto.InternalMessageInfo

func (m *DeleteFirewallRuleRequest) GetInterfaceId() []byte {
	if m != nil {
		return m.InterfaceId
	}
	return nil
}

func (m *DeleteFirewallRuleRequest) GetRuleId() []byte {
	if m != nil {
		return m.RuleId
	}
	return nil
}

type DeleteFirewallRuleResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFirewallRuleResponse) Reset()         { *m = DeleteFirewallRuleResponse{} }
func (m *DeleteFirewallRuleResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteFirewallRuleResponse) ProtoMessage()    {}
func (*DeleteFirewallRuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{91}
}

func (m *DeleteFirewallRuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFirewallRuleResponse.Unmarshal(m, b)
}
func (m *DeleteFirewallRuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFirewallRuleResponse.Marshal(b, m, deterministic)
}
func (m *DeleteFirewallRuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFirewallRuleResponse.Merge(m, src)
}
func (m *DeleteFirewallRuleResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteFirewallRuleResponse.Size(m)
}
func (m *DeleteFirewallRuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFirewallRuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFirewallRuleResponse proto.InternalMessageInfo

func (m *DeleteFirewallRuleResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CapturedInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceType CaptureInterfaceType `protobuf:"varint,1,opt,name=interface_type,json=interfaceType,proto3,enum=dpdkironcore.v1.CaptureInterfaceType" json:"interface_type,omitempty"`
	Filter        []byte               `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// Types that are valid to be assigned to Spec:
	//	*CapturedInterface_VfName
	//	*CapturedInterface_PfIndex
	Spec                 isCapturedInterface_Spec `protobuf_oneof:"spec"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CapturedInterface) Reset()         { *m = CapturedInterface{} }
func (m *CapturedInterface) String() string { return proto.CompactTextString(m) }
func (*CapturedInterface) ProtoMessage()    {}
func (*CapturedInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{92}
}

func (m *CapturedInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapturedInterface.Unmarshal(m, b)
}
func (m *CapturedInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapturedInterface.Marshal(b, m, deterministic)
}
func (m *CapturedInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapturedInterface.Merge(m, src)
}
func (m *CapturedInterface) XXX_Size() int {
	return xxx_messageInfo_CapturedInterface.Size(m)
}
func (m *CapturedInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_CapturedInterface.DiscardUnknown(m)
}

var xxx_messageInfo_CapturedInterface proto.InternalMessageInfo

func (m *CapturedInterface) GetInterfaceType() CaptureInterfaceType {
	if m != nil {
		return m.InterfaceType
	}
	return CaptureInterfaceType_SINGLE_PF
}

func (m *CapturedInterface) GetFilter() []byte {
	if m != nil {
		return m.Filter
	}
	return nil
}

type isCapturedInterface_Spec interface {
	isCapturedInterface_Spec()
}

type CapturedInterface_VfName struct {
	VfName []byte `protobuf:"bytes,3,opt,name=vf_name,json=vfName,proto3,oneof"`
}

type CapturedInterface_PfIndex struct {
	PfIndex uint32 `protobuf:"varint,4,opt,name=pf_index,json=pfIndex,proto3,oneof"`
}

func (*CapturedInterface_VfName) isCapturedInterface_Spec() {}

func (*CapturedInterface_PfIndex) isCapturedInterface_Spec() {}

func (m *CapturedInterface) GetSpec() isCapturedInterface_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *CapturedInterface) GetVfName() []byte {
	if x, ok := m.GetSpec().(*CapturedInterface_VfName); ok {
		return x.VfName
	}
	return nil
}

func (m *CapturedInterface) GetPfIndex() uint32 {
	if x, ok := m.GetSpec().(*CapturedInterface_PfIndex); ok {
		return x.PfIndex
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CapturedInterface) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CapturedInterface_VfName)(nil),
		(*CapturedInterface_PfIndex)(nil),
	}
}

type CaptureConfig struct {
	SinkNodeIp           *IpAddress           `protobuf:"bytes,1,opt,name=sink_node_ip,json=sinkNodeIp,proto3" json:"sink_node_ip,omitempty"`
	UdpSrcPort           uint32               `protobuf:"varint,2,opt,name=udp_src_port,json=udpSrcPort,proto3" json:"udp_src_port,omitempty"`
	UdpDstPort           uint32               `protobuf:"varint,3,opt,name=udp_dst_port,json=udpDstPort,proto3" json:"udp_dst_port,omitempty"`
	Interfaces           []*CapturedInterface `protobuf:"bytes,4,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CaptureConfig) Reset()         { *m = CaptureConfig{} }
func (m *CaptureConfig) String() string { return proto.CompactTextString(m) }
func (*CaptureConfig) ProtoMessage()    {}
func (*CaptureConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{93}
}

func (m *CaptureConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureConfig.Unmarshal(m, b)
}
func (m *CaptureConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureConfig.Marshal(b, m, deterministic)
}
func (m *CaptureConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureConfig.Merge(m, src)
}
func (m *CaptureConfig) XXX_Size() int {
	return xxx_messageInfo_CaptureConfig.Size(m)
}
func (m *CaptureConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureConfig proto.InternalMessageInfo

func (m *CaptureConfig) GetSinkNodeIp() *IpAddress {
	if m != nil {
		return m.SinkNodeIp
	}
	return nil
}

func (m *CaptureConfig) GetUdpSrcPort() uint32 {
	if m != nil {
		return m.UdpSrcPort
	}
	return 0
}

func (m *CaptureConfig) GetUdpDstPort() uint32 {
	if m != nil {
		return m.UdpDstPort
	}
	return 0
}

func (m *CaptureConfig) GetInterfaces() []*CapturedInterface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type CaptureStartRequest struct {
	CaptureConfig        *CaptureConfig `protobuf:"bytes,1,opt,name=capture_config,json=captureConfig,proto3" json:"capture_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CaptureStartRequest) Reset()         { *m = CaptureStartRequest{} }
func (m *CaptureStartRequest) String() string { return proto.CompactTextString(m) }
func (*CaptureStartRequest) ProtoMessage()    {}
func (*CaptureStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{94}
}

func (m *CaptureStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureStartRequest.Unmarshal(m, b)
}
func (m *CaptureStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureStartRequest.Marshal(b, m, deterministic)
}
func (m *CaptureStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureStartRequest.Merge(m, src)
}
func (m *CaptureStartRequest) XXX_Size() int {
	return xxx_messageInfo_CaptureStartRequest.Size(m)
}
func (m *CaptureStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureStartRequest proto.InternalMessageInfo

func (m *CaptureStartRequest) GetCaptureConfig() *CaptureConfig {
	if m != nil {
		return m.CaptureConfig
	}
	return nil
}

type CaptureStartResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CaptureStartResponse) Reset()         { *m = CaptureStartResponse{} }
func (m *CaptureStartResponse) String() string { return proto.CompactTextString(m) }
func (*CaptureStartResponse) ProtoMessage()    {}
func (*CaptureStartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{95}
}

func (m *CaptureStartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureStartResponse.Unmarshal(m, b)
}
func (m *CaptureStartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureStartResponse.Marshal(b, m, deterministic)
}
func (m *CaptureStartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureStartResponse.Merge(m, src)
}
func (m *CaptureStartResponse) XXX_Size() int {
	return xxx_messageInfo_CaptureStartResponse.Size(m)
}
func (m *CaptureStartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureStartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureStartResponse proto.InternalMessageInfo

func (m *CaptureStartResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CaptureStopRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CaptureStopRequest) Reset()         { *m = CaptureStopRequest{} }
func (m *CaptureStopRequest) String() string { return proto.CompactTextString(m) }
func (*CaptureStopRequest) ProtoMessage()    {}
func (*CaptureStopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{96}
}

func (m *CaptureStopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureStopRequest.Unmarshal(m, b)
}
func (m *CaptureStopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureStopRequest.Marshal(b, m, deterministic)
}
func (m *CaptureStopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureStopRequest.Merge(m, src)
}
func (m *CaptureStopRequest) XXX_Size() int {
	return xxx_messageInfo_CaptureStopRequest.Size(m)
}
func (m *CaptureStopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureStopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureStopRequest proto.InternalMessageInfo

type CaptureStopResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	StoppedInterfaceCnt  uint32   `protobuf:"varint,2,opt,name=stopped_interface_cnt,json=stoppedInterfaceCnt,proto3" json:"stopped_interface_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CaptureStopResponse) Reset()         { *m = CaptureStopResponse{} }
func (m *CaptureStopResponse) String() string { return proto.CompactTextString(m) }
func (*CaptureStopResponse) ProtoMessage()    {}
func (*CaptureStopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{97}
}

func (m *CaptureStopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureStopResponse.Unmarshal(m, b)
}
func (m *CaptureStopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureStopResponse.Marshal(b, m, deterministic)
}
func (m *CaptureStopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureStopResponse.Merge(m, src)
}
func (m *CaptureStopResponse) XXX_Size() int {
	return xxx_messageInfo_CaptureStopResponse.Size(m)
}
func (m *CaptureStopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureStopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureStopResponse proto.InternalMessageInfo

func (m *CaptureStopResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CaptureStopResponse) GetStoppedInterfaceCnt() uint32 {
	if m != nil {
		return m.StoppedInterfaceCnt
	}
	return 0
}

type CaptureStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CaptureStatusRequest) Reset()         { *m = CaptureStatusRequest{} }
func (m *CaptureStatusRequest) String() string { return proto.CompactTextString(m) }
func (*CaptureStatusRequest) ProtoMessage()    {}
func (*CaptureStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{98}
}

func (m *CaptureStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureStatusRequest.Unmarshal(m, b)
}
func (m *CaptureStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureStatusRequest.Marshal(b, m, deterministic)
}
func (m *CaptureStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureStatusRequest.Merge(m, src)
}
func (m *CaptureStatusRequest) XXX_Size() int {
	return xxx_messageInfo_CaptureStatusRequest.Size(m)
}
func (m *CaptureStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureStatusRequest proto.InternalMessageInfo

type CaptureStatusResponse struct {
	Status               *Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IsActive             bool           `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CaptureConfig        *CaptureConfig `protobuf:"bytes,3,opt,name=capture_config,json=captureConfig,proto3" json:"capture_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CaptureStatusResponse) Reset()         { *m = CaptureStatusResponse{} }
func (m *CaptureStatusResponse) String() string { return proto.CompactTextString(m) }
func (*CaptureStatusResponse) ProtoMessage()    {}
func (*CaptureStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a26ffc81af0230d, []int{99}
}

func (m *CaptureStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureStatusResponse.Unmarshal(m, b)
}
func (m *CaptureStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureStatusResponse.Marshal(b, m, deterministic)
}
func (m *CaptureStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureStatusResponse.Merge(m, src)
}
func (m *CaptureStatusResponse) XXX_Size() int {
	return xxx_messageInfo_CaptureStatusResponse.Size(m)
}
func (m *CaptureStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureStatusResponse proto.InternalMessageInfo

func (m *CaptureStatusResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CaptureStatusResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}


func (x *CaptureStatusResponse) GetCaptureConfig() *CaptureConfig {
	if x != nil {
		return x.CaptureConfig
	}
	return nil
}

var File_proto_dpdk_proto protoreflect.FileDescriptor

var file_proto_dpdk_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x70, 0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x36, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x70, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x70,
	0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x73, 0x0a,
	0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2a, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76,
	0x6e, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x49, 0x70, 0x76, 0x34, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x5f, 0x69, 0x70, 0x76, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x49, 0x70, 0x76, 0x36, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x63, 0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x63, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x08, 0x49, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x51, 0x0a, 0x09, 0x50, 0x78, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x0f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x62, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x06, 0x4c, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xac, 0x01, 0x0a, 0x08, 0x4e, 0x61, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x05, 0x6e, 0x61, 0x74, 0x49, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x22, 0xb6, 0x01, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x5f, 0x76, 0x6e,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70,
	0x56, 0x6e, 0x69, 0x12, 0x43, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x46, 0x0a, 0x0a, 0x49, 0x63, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x63, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x69, 0x63, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x63, 0x6d, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x63, 0x6d, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x54, 0x63, 0x70,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x70,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x73, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x73, 0x74, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x70, 0x65, 0x72, 0x22, 0xa3,
	0x01, 0x0a, 0x09, 0x55, 0x64, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75,
	0x70, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x72, 0x63, 0x50,
	0x6f, 0x72, 0x74, 0x55, 0x70, 0x70, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x73, 0x74, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x0e, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x55,
	0x70, 0x70, 0x65, 0x72, 0x22, 0xad, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x63, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x69, 0x63, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x03, 0x74, 0x63,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x70, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x2e, 0x0a, 0x03, 0x75, 0x64,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x64, 0x70, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x03, 0x75, 0x64, 0x70, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x84, 0x03, 0x0a, 0x0c, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0d, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x0c, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x46, 0x0a, 0x12, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x11,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0x48, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x70, 0x64,
	0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x19, 0x0a, 0x17, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x12,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x99,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3a, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x38, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0xe8, 0x02, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69,
	0x12, 0x3a, 0x0a, 0x0b, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0a, 0x69, 0x70, 0x76, 0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a, 0x0b,
	0x69, 0x70, 0x76, 0x36, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x69, 0x70,
	0x76, 0x36, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x78, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x78, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x70, 0x78, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x02, 0x76, 0x66, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x76, 0x66, 0x22, 0x3b, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x7c, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x52, 0x08, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x6e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61,
	0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x69, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x22, 0x47, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x1f, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x88, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x52, 0x08, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x22, 0x7a, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x75,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x53, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x68, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x06, 0x76, 0x69, 0x70, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76,
	0x69, 0x70, 0x49, 0x70, 0x22, 0x6b, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e,
	0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x22, 0x32, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x76, 0x69, 0x70,
	0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76, 0x69, 0x70, 0x49, 0x70, 0x12, 0x25, 0x0a, 0x0e,
	0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x22, 0x35, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xe3, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x6c, 0x6f,
	0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x49, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x6e, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x46,
	0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64,
	0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x11, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x74, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61,
	0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x90, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70,
	0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x0f,
	0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x49,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x76, 0x6e, 0x69, 0x12, 0x46, 0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x11, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x22, 0x44, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6c,
	0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x70, 0x22, 0x53, 0x0a,
	0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x49, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6c,
	0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8d, 0x01,
	0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x70, 0x73, 0x22, 0x83, 0x01,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6c, 0x6f, 0x61, 0x64,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x70, 0x22, 0x53, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x6e, 0x61,
	0x74, 0x49, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x6b, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61,
	0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31,
	0x0a, 0x06, 0x6e, 0x61, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x6e, 0x61, 0x74, 0x49,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x35,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64,
	0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x5f,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x6e, 0x61, 0x74, 0x49, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x6e, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x64,
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x4c, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x05, 0x6e, 0x61, 0x74, 0x49, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69,
	0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69,
	0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x72, 0x74,
	0x22, 0x4c, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x5f, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x05, 0x6e, 0x61, 0x74, 0x49, 0x70, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x4c, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x4e, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6e,
	0x61, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70,
	0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x6e, 0x61, 0x74, 0x49, 0x70, 0x22, 0x87,
	0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70,
	0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0b,
	0x6e, 0x61, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6e, 0x61,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x6e, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x22,
	0x75, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x6e, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x2c,
	0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x2c, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x70,
	0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x56, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x6e, 0x69, 0x49, 0x6e,
	0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x2c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x70, 0x64,
	0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6e, 0x69,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5f, 0x0a, 0x15, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x56, 0x6e, 0x69, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x0f, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x56, 0x6e, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69,
	0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6e, 0x69, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x43,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x56, 0x6e, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3d, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x33, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x71, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x66, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x54, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x57, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x4d, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb9,
	0x01, 0x0a, 0x11, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x07, 0x76, 0x66,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x76,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x70, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x70, 0x66, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0xd5, 0x01, 0x0a, 0x0d, 0x43,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x0c,
	0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a,
	0x73, 0x69, 0x6e, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x64,
	0x70, 0x5f, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x75, 0x64, 0x70, 0x53, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0c,
	0x75, 0x64, 0x70, 0x5f, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x75, 0x64, 0x70, 0x44, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x42,
	0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x22, 0x5c, 0x0a, 0x13, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0e, 0x63, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x47, 0x0a, 0x14, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x7a, 0x0a, 0x13, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6e, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x43,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x15, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x63,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2a, 0x2b, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x52, 0x45, 0x4d, 0x45, 0x54, 0x41, 0x4c, 0x10, 0x01, 0x2a,
	0x1f, 0x0a, 0x09, 0x49, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x50, 0x56, 0x34, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x36, 0x10, 0x01,
	0x2a, 0x4c, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x43, 0x4d, 0x50, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x10, 0x06, 0x12, 0x07,
	0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x11, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x43, 0x4d, 0x50, 0x56,
	0x36, 0x10, 0x3a, 0x12, 0x09, 0x0a, 0x04, 0x53, 0x43, 0x54, 0x50, 0x10, 0x84, 0x01, 0x2a, 0x2b,
	0x0a, 0x10, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x2a, 0x26, 0x0a, 0x0e, 0x46,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x52, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x43, 0x45, 0x50,
	0x54, 0x10, 0x01, 0x2a, 0x33, 0x0a, 0x07, 0x56, 0x6e, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x56, 0x4e, 0x49, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x56, 0x4e, 0x49, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x4e,
	0x49, 0x5f, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x02, 0x2a, 0x34, 0x0a, 0x14, 0x43, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x50, 0x46, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x56, 0x46, 0x10, 0x01, 0x32, 0xf0,
	0x20, 0x0a, 0x0c, 0x44, 0x50, 0x44, 0x4b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x69, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x12, 0x28, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0a, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x26,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x12, 0x24, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x66, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x64, 0x70,
	0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73,
	0x12, 0x24, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x24, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x24,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x64, 0x70, 0x64,
	0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x30,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x30, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x69, 0x70, 0x12, 0x21, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x12, 0x1e, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x70, 0x12, 0x21, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f,
	0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x12, 0x2a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x30, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x64, 0x70,
	0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x2f, 0x2e, 0x64, 0x70,
	0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x81, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x30, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x74, 0x12, 0x21, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x61, 0x74, 0x12, 0x21, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4e, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x74, 0x73, 0x12, 0x25,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x4e, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x4e, 0x61, 0x74, 0x12, 0x29, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x4e, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e,
	0x61, 0x74, 0x12, 0x29, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x4e, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e, 0x61, 0x74, 0x73, 0x12,
	0x28, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4e, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x23,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x64, 0x70, 0x64,
	0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x56, 0x6e, 0x69, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69,
	0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x56, 0x6e, 0x69, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x6e, 0x69, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x56, 0x6e, 0x69, 0x12, 0x20, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x56, 0x6e, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x56,
	0x6e, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x29, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x2a, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64,
	0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x27,
	0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x64, 0x70, 0x64, 0x6b,
	0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69,
	0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x24, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x70, 0x64,
	0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74,
	0x6f, 0x70, 0x12, 0x23, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x0d, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x25, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x70, 0x64, 0x6b, 0x69, 0x72,
	0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x64, 0x70, 0x64, 0x6b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dpdk_proto_rawDescOnce sync.Once
	file_proto_dpdk_proto_rawDescData = file_proto_dpdk_proto_rawDesc
)

func file_proto_dpdk_proto_rawDescGZIP() []byte {
	file_proto_dpdk_proto_rawDescOnce.Do(func() {
		file_proto_dpdk_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dpdk_proto_rawDescData)
	})
	return file_proto_dpdk_proto_rawDescData
}

var file_proto_dpdk_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_proto_dpdk_proto_msgTypes = make([]protoimpl.MessageInfo, 100)
var file_proto_dpdk_proto_goTypes = []interface{}{
	(InterfaceType)(0),                       // 0: dpdkironcore.v1.InterfaceType
	(IpVersion)(0),                           // 1: dpdkironcore.v1.IpVersion
	(Protocol)(0),                            // 2: dpdkironcore.v1.Protocol
	(TrafficDirection)(0),                    // 3: dpdkironcore.v1.TrafficDirection
	(FirewallAction)(0),                      // 4: dpdkironcore.v1.FirewallAction
	(VniType)(0),                             // 5: dpdkironcore.v1.VniType
	(CaptureInterfaceType)(0),                // 6: dpdkironcore.v1.CaptureInterfaceType
	(*Empty)(nil),                            // 7: dpdkironcore.v1.Empty
	(*Status)(nil),                           // 8: dpdkironcore.v1.Status
	(*IpAddress)(nil),                        // 9: dpdkironcore.v1.IpAddress
	(*Prefix)(nil),                           // 10: dpdkironcore.v1.Prefix
	(*Interface)(nil),                        // 11: dpdkironcore.v1.Interface
	(*IpConfig)(nil),                         // 12: dpdkironcore.v1.IpConfig
	(*PxeConfig)(nil),                        // 13: dpdkironcore.v1.PxeConfig
	(*VirtualFunction)(nil),                  // 14: dpdkironcore.v1.VirtualFunction
	(*LbPort)(nil),                           // 15: dpdkironcore.v1.LbPort
	(*NatEntry)(nil),                         // 16: dpdkironcore.v1.NatEntry
	(*Route)(nil),                            // 17: dpdkironcore.v1.Route
	(*IcmpFilter)(nil),                       // 18: dpdkironcore.v1.IcmpFilter
	(*TcpFilter)(nil),                        // 19: dpdkironcore.v1.TcpFilter
	(*UdpFilter)(nil),                        // 20: dpdkironcore.v1.UdpFilter
	(*ProtocolFilter)(nil),                   // 21: dpdkironcore.v1.ProtocolFilter
	(*FirewallRule)(nil),                     // 22: dpdkironcore.v1.FirewallRule
	(*CheckInitializedRequest)(nil),          // 23: dpdkironcore.v1.CheckInitializedRequest
	(*CheckInitializedResponse)(nil),         // 24: dpdkironcore.v1.CheckInitializedResponse
	(*InitializeRequest)(nil),                // 25: dpdkironcore.v1.InitializeRequest
	(*InitializeResponse)(nil),               // 26: dpdkironcore.v1.InitializeResponse
	(*GetVersionRequest)(nil),                // 27: dpdkironcore.v1.GetVersionRequest
	(*GetVersionResponse)(nil),               // 28: dpdkironcore.v1.GetVersionResponse
	(*ListInterfacesRequest)(nil),            // 29: dpdkironcore.v1.ListInterfacesRequest
	(*ListInterfacesResponse)(nil),           // 30: dpdkironcore.v1.ListInterfacesResponse
	(*GetInterfaceRequest)(nil),              // 31: dpdkironcore.v1.GetInterfaceRequest
	(*GetInterfaceResponse)(nil),             // 32: dpdkironcore.v1.GetInterfaceResponse
	(*CreateInterfaceRequest)(nil),           // 33: dpdkironcore.v1.CreateInterfaceRequest
	(*CreateInterfaceResponse)(nil),          // 34: dpdkironcore.v1.CreateInterfaceResponse
	(*DeleteInterfaceRequest)(nil),           // 35: dpdkironcore.v1.DeleteInterfaceRequest
	(*DeleteInterfaceResponse)(nil),          // 36: dpdkironcore.v1.DeleteInterfaceResponse
	(*ListPrefixesRequest)(nil),              // 37: dpdkironcore.v1.ListPrefixesRequest
	(*ListPrefixesResponse)(nil),             // 38: dpdkironcore.v1.ListPrefixesResponse
	(*CreatePrefixRequest)(nil),              // 39: dpdkironcore.v1.CreatePrefixRequest
	(*CreatePrefixResponse)(nil),             // 40: dpdkironcore.v1.CreatePrefixResponse
	(*DeletePrefixRequest)(nil),              // 41: dpdkironcore.v1.DeletePrefixRequest
	(*DeletePrefixResponse)(nil),             // 42: dpdkironcore.v1.DeletePrefixResponse
	(*ListLoadBalancerPrefixesRequest)(nil),  // 43: dpdkironcore.v1.ListLoadBalancerPrefixesRequest
	(*ListLoadBalancerPrefixesResponse)(nil), // 44: dpdkironcore.v1.ListLoadBalancerPrefixesResponse
	(*CreateLoadBalancerPrefixRequest)(nil),  // 45: dpdkironcore.v1.CreateLoadBalancerPrefixRequest
	(*CreateLoadBalancerPrefixResponse)(nil), // 46: dpdkironcore.v1.CreateLoadBalancerPrefixResponse
	(*DeleteLoadBalancerPrefixRequest)(nil),  // 47: dpdkironcore.v1.DeleteLoadBalancerPrefixRequest
	(*DeleteLoadBalancerPrefixResponse)(nil), // 48: dpdkironcore.v1.DeleteLoadBalancerPrefixResponse
	(*CreateVipRequest)(nil),                 // 49: dpdkironcore.v1.CreateVipRequest
	(*CreateVipResponse)(nil),                // 50: dpdkironcore.v1.CreateVipResponse
	(*GetVipRequest)(nil),                    // 51: dpdkironcore.v1.GetVipRequest
	(*GetVipResponse)(nil),                   // 52: dpdkironcore.v1.GetVipResponse
	(*DeleteVipRequest)(nil),                 // 53: dpdkironcore.v1.DeleteVipRequest
	(*DeleteVipResponse)(nil),                // 54: dpdkironcore.v1.DeleteVipResponse
	(*CreateLoadBalancerRequest)(nil),        // 55: dpdkironcore.v1.CreateLoadBalancerRequest
	(*CreateLoadBalancerResponse)(nil),       // 56: dpdkironcore.v1.CreateLoadBalancerResponse
	(*GetLoadBalancerRequest)(nil),           // 57: dpdkironcore.v1.GetLoadBalancerRequest
	(*GetLoadBalancerResponse)(nil),          // 58: dpdkironcore.v1.GetLoadBalancerResponse
	(*DeleteLoadBalancerRequest)(nil),        // 59: dpdkironcore.v1.DeleteLoadBalancerRequest
	(*DeleteLoadBalancerResponse)(nil),       // 60: dpdkironcore.v1.DeleteLoadBalancerResponse
	(*CreateLoadBalancerTargetRequest)(nil),  // 61: dpdkironcore.v1.CreateLoadBalancerTargetRequest
	(*CreateLoadBalancerTargetResponse)(nil), // 62: dpdkironcore.v1.CreateLoadBalancerTargetResponse
	(*ListLoadBalancerTargetsRequest)(nil),   // 63: dpdkironcore.v1.ListLoadBalancerTargetsRequest
	(*ListLoadBalancerTargetsResponse)(nil),  // 64: dpdkironcore.v1.ListLoadBalancerTargetsResponse
	(*DeleteLoadBalancerTargetRequest)(nil),  // 65: dpdkironcore.v1.DeleteLoadBalancerTargetRequest
	(*DeleteLoadBalancerTargetResponse)(nil), // 66: dpdkironcore.v1.DeleteLoadBalancerTargetResponse
	(*CreateNatRequest)(nil),                 // 67: dpdkironcore.v1.CreateNatRequest
	(*CreateNatResponse)(nil),                // 68: dpdkironcore.v1.CreateNatResponse
	(*GetNatRequest)(nil),                    // 69: dpdkironcore.v1.GetNatRequest
	(*GetNatResponse)(nil),                   // 70: dpdkironcore.v1.GetNatResponse
	(*DeleteNatRequest)(nil),                 // 71: dpdkironcore.v1.DeleteNatRequest
	(*DeleteNatResponse)(nil),                // 72: dpdkironcore.v1.DeleteNatResponse
	(*CreateNeighborNatRequest)(nil),         // 73: dpdkironcore.v1.CreateNeighborNatRequest
	(*CreateNeighborNatResponse)(nil),        // 74: dpdkironcore.v1.CreateNeighborNatResponse
	(*DeleteNeighborNatRequest)(nil),         // 75: dpdkironcore.v1.DeleteNeighborNatRequest
	(*DeleteNeighborNatResponse)(nil),        // 76: dpdkironcore.v1.DeleteNeighborNatResponse
	(*ListLocalNatsRequest)(nil),             // 77: dpdkironcore.v1.ListLocalNatsRequest
	(*ListLocalNatsResponse)(nil),            // 78: dpdkironcore.v1.ListLocalNatsResponse
	(*ListNeighborNatsRequest)(nil),          // 79: dpdkironcore.v1.ListNeighborNatsRequest
	(*ListNeighborNatsResponse)(nil),         // 80: dpdkironcore.v1.ListNeighborNatsResponse
	(*ListRoutesRequest)(nil),                // 81: dpdkironcore.v1.ListRoutesRequest
	(*ListRoutesResponse)(nil),               // 82: dpdkironcore.v1.ListRoutesResponse
	(*CreateRouteRequest)(nil),               // 83: dpdkironcore.v1.CreateRouteRequest
	(*CreateRouteResponse)(nil),              // 84: dpdkironcore.v1.CreateRouteResponse
	(*DeleteRouteRequest)(nil),               // 85: dpdkironcore.v1.DeleteRouteRequest
	(*DeleteRouteResponse)(nil),              // 86: dpdkironcore.v1.DeleteRouteResponse
	(*CheckVniInUseRequest)(nil),             // 87: dpdkironcore.v1.CheckVniInUseRequest
	(*CheckVniInUseResponse)(nil),            // 88: dpdkironcore.v1.CheckVniInUseResponse
	(*ResetVniRequest)(nil),                  // 89: dpdkironcore.v1.ResetVniRequest
	(*ResetVniResponse)(nil),                 // 90: dpdkironcore.v1.ResetVniResponse
	(*ListFirewallRulesRequest)(nil),         // 91: dpdkironcore.v1.ListFirewallRulesRequest
	(*ListFirewallRulesResponse)(nil),        // 92: dpdkironcore.v1.ListFirewallRulesResponse
	(*CreateFirewallRuleRequest)(nil),        // 93: dpdkironcore.v1.CreateFirewallRuleRequest
	(*CreateFirewallRuleResponse)(nil),       // 94: dpdkironcore.v1.CreateFirewallRuleResponse
	(*GetFirewallRuleRequest)(nil),           // 95: dpdkironcore.v1.GetFirewallRuleRequest
	(*GetFirewallRuleResponse)(nil),          // 96: dpdkironcore.v1.GetFirewallRuleResponse
	(*DeleteFirewallRuleRequest)(nil),        // 97: dpdkironcore.v1.DeleteFirewallRuleRequest
	(*DeleteFirewallRuleResponse)(nil),       // 98: dpdkironcore.v1.DeleteFirewallRuleResponse
	(*CapturedInterface)(nil),                // 99: dpdkironcore.v1.CapturedInterface
	(*CaptureConfig)(nil),                    // 100: dpdkironcore.v1.CaptureConfig
	(*CaptureStartRequest)(nil),              // 101: dpdkironcore.v1.CaptureStartRequest
	(*CaptureStartResponse)(nil),             // 102: dpdkironcore.v1.CaptureStartResponse
	(*CaptureStopRequest)(nil),               // 103: dpdkironcore.v1.CaptureStopRequest
	(*CaptureStopResponse)(nil),              // 104: dpdkironcore.v1.CaptureStopResponse
	(*CaptureStatusRequest)(nil),             // 105: dpdkironcore.v1.CaptureStatusRequest
	(*CaptureStatusResponse)(nil),            // 106: dpdkironcore.v1.CaptureStatusResponse
}
var file_proto_dpdk_proto_depIdxs = []int32{
	1,   // 0: dpdkironcore.v1.IpAddress.ipver:type_name -> dpdkironcore.v1.IpVersion
	9,   // 1: dpdkironcore.v1.Prefix.ip:type_name -> dpdkironcore.v1.IpAddress
	2,   // 2: dpdkironcore.v1.LbPort.protocol:type_name -> dpdkironcore.v1.Protocol
	9,   // 3: dpdkironcore.v1.NatEntry.nat_ip:type_name -> dpdkironcore.v1.IpAddress
	10,  // 4: dpdkironcore.v1.Route.prefix:type_name -> dpdkironcore.v1.Prefix
	9,   // 5: dpdkironcore.v1.Route.nexthop_address:type_name -> dpdkironcore.v1.IpAddress
	18,  // 6: dpdkironcore.v1.ProtocolFilter.icmp:type_name -> dpdkironcore.v1.IcmpFilter
	19,  // 7: dpdkironcore.v1.ProtocolFilter.tcp:type_name -> dpdkironcore.v1.TcpFilter
	20,  // 8: dpdkironcore.v1.ProtocolFilter.udp:type_name -> dpdkironcore.v1.UdpFilter
	3,   // 9: dpdkironcore.v1.FirewallRule.direction:type_name -> dpdkironcore.v1.TrafficDirection
	4,   // 10: dpdkironcore.v1.FirewallRule.action:type_name -> dpdkironcore.v1.FirewallAction
	10,  // 11: dpdkironcore.v1.FirewallRule.source_prefix:type_name -> dpdkironcore.v1.Prefix
	10,  // 12: dpdkironcore.v1.FirewallRule.destination_prefix:type_name -> dpdkironcore.v1.Prefix
	21,  // 13: dpdkironcore.v1.FirewallRule.protocol_filter:type_name -> dpdkironcore.v1.ProtocolFilter
	8,   // 14: dpdkironcore.v1.CheckInitializedResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 15: dpdkironcore.v1.InitializeResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 16: dpdkironcore.v1.GetVersionResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 17: dpdkironcore.v1.ListInterfacesResponse.status:type_name -> dpdkironcore.v1.Status
	11,  // 18: dpdkironcore.v1.ListInterfacesResponse.interfaces:type_name -> dpdkironcore.v1.Interface
	8,   // 19: dpdkironcore.v1.GetInterfaceResponse.status:type_name -> dpdkironcore.v1.Status
	11,  // 20: dpdkironcore.v1.GetInterfaceResponse.interface:type_name -> dpdkironcore.v1.Interface
	0,   // 21: dpdkironcore.v1.CreateInterfaceRequest.interface_type:type_name -> dpdkironcore.v1.InterfaceType
	12,  // 22: dpdkironcore.v1.CreateInterfaceRequest.ipv4_config:type_name -> dpdkironcore.v1.IpConfig
	12,  // 23: dpdkironcore.v1.CreateInterfaceRequest.ipv6_config:type_name -> dpdkironcore.v1.IpConfig
	13,  // 24: dpdkironcore.v1.CreateInterfaceRequest.pxe_config:type_name -> dpdkironcore.v1.PxeConfig
	8,   // 25: dpdkironcore.v1.CreateInterfaceResponse.status:type_name -> dpdkironcore.v1.Status
	14,  // 26: dpdkironcore.v1.CreateInterfaceResponse.vf:type_name -> dpdkironcore.v1.VirtualFunction
	8,   // 27: dpdkironcore.v1.DeleteInterfaceResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 28: dpdkironcore.v1.ListPrefixesResponse.status:type_name -> dpdkironcore.v1.Status
	10,  // 29: dpdkironcore.v1.ListPrefixesResponse.prefixes:type_name -> dpdkironcore.v1.Prefix
	10,  // 30: dpdkironcore.v1.CreatePrefixRequest.prefix:type_name -> dpdkironcore.v1.Prefix
	8,   // 31: dpdkironcore.v1.CreatePrefixResponse.status:type_name -> dpdkironcore.v1.Status
	10,  // 32: dpdkironcore.v1.DeletePrefixRequest.prefix:type_name -> dpdkironcore.v1.Prefix
	8,   // 33: dpdkironcore.v1.DeletePrefixResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 34: dpdkironcore.v1.ListLoadBalancerPrefixesResponse.status:type_name -> dpdkironcore.v1.Status
	10,  // 35: dpdkironcore.v1.ListLoadBalancerPrefixesResponse.prefixes:type_name -> dpdkironcore.v1.Prefix
	10,  // 36: dpdkironcore.v1.CreateLoadBalancerPrefixRequest.prefix:type_name -> dpdkironcore.v1.Prefix
	8,   // 37: dpdkironcore.v1.CreateLoadBalancerPrefixResponse.status:type_name -> dpdkironcore.v1.Status
	10,  // 38: dpdkironcore.v1.DeleteLoadBalancerPrefixRequest.prefix:type_name -> dpdkironcore.v1.Prefix
	8,   // 39: dpdkironcore.v1.DeleteLoadBalancerPrefixResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 40: dpdkironcore.v1.CreateVipRequest.vip_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 41: dpdkironcore.v1.CreateVipResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 42: dpdkironcore.v1.GetVipResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 43: dpdkironcore.v1.GetVipResponse.vip_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 44: dpdkironcore.v1.DeleteVipResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 45: dpdkironcore.v1.CreateLoadBalancerRequest.loadbalanced_ip:type_name -> dpdkironcore.v1.IpAddress
	15,  // 46: dpdkironcore.v1.CreateLoadBalancerRequest.loadbalanced_ports:type_name -> dpdkironcore.v1.LbPort
	8,   // 47: dpdkironcore.v1.CreateLoadBalancerResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 48: dpdkironcore.v1.GetLoadBalancerResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 49: dpdkironcore.v1.GetLoadBalancerResponse.loadbalanced_ip:type_name -> dpdkironcore.v1.IpAddress
	15,  // 50: dpdkironcore.v1.GetLoadBalancerResponse.loadbalanced_ports:type_name -> dpdkironcore.v1.LbPort
	8,   // 51: dpdkironcore.v1.DeleteLoadBalancerResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 52: dpdkironcore.v1.CreateLoadBalancerTargetRequest.target_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 53: dpdkironcore.v1.CreateLoadBalancerTargetResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 54: dpdkironcore.v1.ListLoadBalancerTargetsResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 55: dpdkironcore.v1.ListLoadBalancerTargetsResponse.target_ips:type_name -> dpdkironcore.v1.IpAddress
	9,   // 56: dpdkironcore.v1.DeleteLoadBalancerTargetRequest.target_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 57: dpdkironcore.v1.DeleteLoadBalancerTargetResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 58: dpdkironcore.v1.CreateNatRequest.nat_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 59: dpdkironcore.v1.CreateNatResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 60: dpdkironcore.v1.GetNatResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 61: dpdkironcore.v1.GetNatResponse.nat_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 62: dpdkironcore.v1.DeleteNatResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 63: dpdkironcore.v1.CreateNeighborNatRequest.nat_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 64: dpdkironcore.v1.CreateNeighborNatResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 65: dpdkironcore.v1.DeleteNeighborNatRequest.nat_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 66: dpdkironcore.v1.DeleteNeighborNatResponse.status:type_name -> dpdkironcore.v1.Status
	9,   // 67: dpdkironcore.v1.ListLocalNatsRequest.nat_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 68: dpdkironcore.v1.ListLocalNatsResponse.status:type_name -> dpdkironcore.v1.Status
	16,  // 69: dpdkironcore.v1.ListLocalNatsResponse.nat_entries:type_name -> dpdkironcore.v1.NatEntry
	9,   // 70: dpdkironcore.v1.ListNeighborNatsRequest.nat_ip:type_name -> dpdkironcore.v1.IpAddress
	8,   // 71: dpdkironcore.v1.ListNeighborNatsResponse.status:type_name -> dpdkironcore.v1.Status
	16,  // 72: dpdkironcore.v1.ListNeighborNatsResponse.nat_entries:type_name -> dpdkironcore.v1.NatEntry
	8,   // 73: dpdkironcore.v1.ListRoutesResponse.status:type_name -> dpdkironcore.v1.Status
	17,  // 74: dpdkironcore.v1.ListRoutesResponse.routes:type_name -> dpdkironcore.v1.Route
	17,  // 75: dpdkironcore.v1.CreateRouteRequest.route:type_name -> dpdkironcore.v1.Route
	8,   // 76: dpdkironcore.v1.CreateRouteResponse.status:type_name -> dpdkironcore.v1.Status
	17,  // 77: dpdkironcore.v1.DeleteRouteRequest.route:type_name -> dpdkironcore.v1.Route
	8,   // 78: dpdkironcore.v1.DeleteRouteResponse.status:type_name -> dpdkironcore.v1.Status
	5,   // 79: dpdkironcore.v1.CheckVniInUseRequest.type:type_name -> dpdkironcore.v1.VniType
	8,   // 80: dpdkironcore.v1.CheckVniInUseResponse.status:type_name -> dpdkironcore.v1.Status
	5,   // 81: dpdkironcore.v1.ResetVniRequest.type:type_name -> dpdkironcore.v1.VniType
	8,   // 82: dpdkironcore.v1.ResetVniResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 83: dpdkironcore.v1.ListFirewallRulesResponse.status:type_name -> dpdkironcore.v1.Status
	22,  // 84: dpdkironcore.v1.ListFirewallRulesResponse.rules:type_name -> dpdkironcore.v1.FirewallRule
	22,  // 85: dpdkironcore.v1.CreateFirewallRuleRequest.rule:type_name -> dpdkironcore.v1.FirewallRule
	8,   // 86: dpdkironcore.v1.CreateFirewallRuleResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 87: dpdkironcore.v1.GetFirewallRuleResponse.status:type_name -> dpdkironcore.v1.Status
	22,  // 88: dpdkironcore.v1.GetFirewallRuleResponse.rule:type_name -> dpdkironcore.v1.FirewallRule
	8,   // 89: dpdkironcore.v1.DeleteFirewallRuleResponse.status:type_name -> dpdkironcore.v1.Status
	6,   // 90: dpdkironcore.v1.CapturedInterface.interface_type:type_name -> dpdkironcore.v1.CaptureInterfaceType
	9,   // 91: dpdkironcore.v1.CaptureConfig.sink_node_ip:type_name -> dpdkironcore.v1.IpAddress
	99,  // 92: dpdkironcore.v1.CaptureConfig.interfaces:type_name -> dpdkironcore.v1.CapturedInterface
	100, // 93: dpdkironcore.v1.CaptureStartRequest.capture_config:type_name -> dpdkironcore.v1.CaptureConfig
	8,   // 94: dpdkironcore.v1.CaptureStartResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 95: dpdkironcore.v1.CaptureStopResponse.status:type_name -> dpdkironcore.v1.Status
	8,   // 96: dpdkironcore.v1.CaptureStatusResponse.status:type_name -> dpdkironcore.v1.Status
	100, // 97: dpdkironcore.v1.CaptureStatusResponse.capture_config:type_name -> dpdkironcore.v1.CaptureConfig
	23,  // 98: dpdkironcore.v1.DPDKironcore.CheckInitialized:input_type -> dpdkironcore.v1.CheckInitializedRequest
	25,  // 99: dpdkironcore.v1.DPDKironcore.Initialize:input_type -> dpdkironcore.v1.InitializeRequest
	27,  // 100: dpdkironcore.v1.DPDKironcore.GetVersion:input_type -> dpdkironcore.v1.GetVersionRequest
	29,  // 101: dpdkironcore.v1.DPDKironcore.ListInterfaces:input_type -> dpdkironcore.v1.ListInterfacesRequest
	31,  // 102: dpdkironcore.v1.DPDKironcore.GetInterface:input_type -> dpdkironcore.v1.GetInterfaceRequest
	33,  // 103: dpdkironcore.v1.DPDKironcore.CreateInterface:input_type -> dpdkironcore.v1.CreateInterfaceRequest
	35,  // 104: dpdkironcore.v1.DPDKironcore.DeleteInterface:input_type -> dpdkironcore.v1.DeleteInterfaceRequest
	37,  // 105: dpdkironcore.v1.DPDKironcore.ListPrefixes:input_type -> dpdkironcore.v1.ListPrefixesRequest
	39,  // 106: dpdkironcore.v1.DPDKironcore.CreatePrefix:input_type -> dpdkironcore.v1.CreatePrefixRequest
	41,  // 107: dpdkironcore.v1.DPDKironcore.DeletePrefix:input_type -> dpdkironcore.v1.DeletePrefixRequest
	43,  // 108: dpdkironcore.v1.DPDKironcore.ListLoadBalancerPrefixes:input_type -> dpdkironcore.v1.ListLoadBalancerPrefixesRequest
	45,  // 109: dpdkironcore.v1.DPDKironcore.CreateLoadBalancerPrefix:input_type -> dpdkironcore.v1.CreateLoadBalancerPrefixRequest
	47,  // 110: dpdkironcore.v1.DPDKironcore.DeleteLoadBalancerPrefix:input_type -> dpdkironcore.v1.DeleteLoadBalancerPrefixRequest
	49,  // 111: dpdkironcore.v1.DPDKironcore.CreateVip:input_type -> dpdkironcore.v1.CreateVipRequest
	51,  // 112: dpdkironcore.v1.DPDKironcore.GetVip:input_type -> dpdkironcore.v1.GetVipRequest
	53,  // 113: dpdkironcore.v1.DPDKironcore.DeleteVip:input_type -> dpdkironcore.v1.DeleteVipRequest
	55,  // 114: dpdkironcore.v1.DPDKironcore.CreateLoadBalancer:input_type -> dpdkironcore.v1.CreateLoadBalancerRequest
	57,  // 115: dpdkironcore.v1.DPDKironcore.GetLoadBalancer:input_type -> dpdkironcore.v1.GetLoadBalancerRequest
	59,  // 116: dpdkironcore.v1.DPDKironcore.DeleteLoadBalancer:input_type -> dpdkironcore.v1.DeleteLoadBalancerRequest
	61,  // 117: dpdkironcore.v1.DPDKironcore.CreateLoadBalancerTarget:input_type -> dpdkironcore.v1.CreateLoadBalancerTargetRequest
	63,  // 118: dpdkironcore.v1.DPDKironcore.ListLoadBalancerTargets:input_type -> dpdkironcore.v1.ListLoadBalancerTargetsRequest
	65,  // 119: dpdkironcore.v1.DPDKironcore.DeleteLoadBalancerTarget:input_type -> dpdkironcore.v1.DeleteLoadBalancerTargetRequest
	67,  // 120: dpdkironcore.v1.DPDKironcore.CreateNat:input_type -> dpdkironcore.v1.CreateNatRequest
	69,  // 121: dpdkironcore.v1.DPDKironcore.GetNat:input_type -> dpdkironcore.v1.GetNatRequest
	71,  // 122: dpdkironcore.v1.DPDKironcore.DeleteNat:input_type -> dpdkironcore.v1.DeleteNatRequest
	77,  // 123: dpdkironcore.v1.DPDKironcore.ListLocalNats:input_type -> dpdkironcore.v1.ListLocalNatsRequest
	73,  // 124: dpdkironcore.v1.DPDKironcore.CreateNeighborNat:input_type -> dpdkironcore.v1.CreateNeighborNatRequest
	75,  // 125: dpdkironcore.v1.DPDKironcore.DeleteNeighborNat:input_type -> dpdkironcore.v1.DeleteNeighborNatRequest
	79,  // 126: dpdkironcore.v1.DPDKironcore.ListNeighborNats:input_type -> dpdkironcore.v1.ListNeighborNatsRequest
	81,  // 127: dpdkironcore.v1.DPDKironcore.ListRoutes:input_type -> dpdkironcore.v1.ListRoutesRequest
	83,  // 128: dpdkironcore.v1.DPDKironcore.CreateRoute:input_type -> dpdkironcore.v1.CreateRouteRequest
	85,  // 129: dpdkironcore.v1.DPDKironcore.DeleteRoute:input_type -> dpdkironcore.v1.DeleteRouteRequest
	87,  // 130: dpdkironcore.v1.DPDKironcore.CheckVniInUse:input_type -> dpdkironcore.v1.CheckVniInUseRequest
	89,  // 131: dpdkironcore.v1.DPDKironcore.ResetVni:input_type -> dpdkironcore.v1.ResetVniRequest
	91,  // 132: dpdkironcore.v1.DPDKironcore.ListFirewallRules:input_type -> dpdkironcore.v1.ListFirewallRulesRequest
	93,  // 133: dpdkironcore.v1.DPDKironcore.CreateFirewallRule:input_type -> dpdkironcore.v1.CreateFirewallRuleRequest
	95,  // 134: dpdkironcore.v1.DPDKironcore.GetFirewallRule:input_type -> dpdkironcore.v1.GetFirewallRuleRequest
	97,  // 135: dpdkironcore.v1.DPDKironcore.DeleteFirewallRule:input_type -> dpdkironcore.v1.DeleteFirewallRuleRequest
	101, // 136: dpdkironcore.v1.DPDKironcore.CaptureStart:input_type -> dpdkironcore.v1.CaptureStartRequest
	103, // 137: dpdkironcore.v1.DPDKironcore.CaptureStop:input_type -> dpdkironcore.v1.CaptureStopRequest
	105, // 138: dpdkironcore.v1.DPDKironcore.CaptureStatus:input_type -> dpdkironcore.v1.CaptureStatusRequest
	24,  // 139: dpdkironcore.v1.DPDKironcore.CheckInitialized:output_type -> dpdkironcore.v1.CheckInitializedResponse
	26,  // 140: dpdkironcore.v1.DPDKironcore.Initialize:output_type -> dpdkironcore.v1.InitializeResponse
	28,  // 141: dpdkironcore.v1.DPDKironcore.GetVersion:output_type -> dpdkironcore.v1.GetVersionResponse
	30,  // 142: dpdkironcore.v1.DPDKironcore.ListInterfaces:output_type -> dpdkironcore.v1.ListInterfacesResponse
	32,  // 143: dpdkironcore.v1.DPDKironcore.GetInterface:output_type -> dpdkironcore.v1.GetInterfaceResponse
	34,  // 144: dpdkironcore.v1.DPDKironcore.CreateInterface:output_type -> dpdkironcore.v1.CreateInterfaceResponse
	36,  // 145: dpdkironcore.v1.DPDKironcore.DeleteInterface:output_type -> dpdkironcore.v1.DeleteInterfaceResponse
	38,  // 146: dpdkironcore.v1.DPDKironcore.ListPrefixes:output_type -> dpdkironcore.v1.ListPrefixesResponse
	40,  // 147: dpdkironcore.v1.DPDKironcore.CreatePrefix:output_type -> dpdkironcore.v1.CreatePrefixResponse
	42,  // 148: dpdkironcore.v1.DPDKironcore.DeletePrefix:output_type -> dpdkironcore.v1.DeletePrefixResponse
	44,  // 149: dpdkironcore.v1.DPDKironcore.ListLoadBalancerPrefixes:output_type -> dpdkironcore.v1.ListLoadBalancerPrefixesResponse
	46,  // 150: dpdkironcore.v1.DPDKironcore.CreateLoadBalancerPrefix:output_type -> dpdkironcore.v1.CreateLoadBalancerPrefixResponse
	48,  // 151: dpdkironcore.v1.DPDKironcore.DeleteLoadBalancerPrefix:output_type -> dpdkironcore.v1.DeleteLoadBalancerPrefixResponse
	50,  // 152: dpdkironcore.v1.DPDKironcore.CreateVip:output_type -> dpdkironcore.v1.CreateVipResponse
	52,  // 153: dpdkironcore.v1.DPDKironcore.GetVip:output_type -> dpdkironcore.v1.GetVipResponse
	54,  // 154: dpdkironcore.v1.DPDKironcore.DeleteVip:output_type -> dpdkironcore.v1.DeleteVipResponse
	56,  // 155: dpdkironcore.v1.DPDKironcore.CreateLoadBalancer:output_type -> dpdkironcore.v1.CreateLoadBalancerResponse
	58,  // 156: dpdkironcore.v1.DPDKironcore.GetLoadBalancer:output_type -> dpdkironcore.v1.GetLoadBalancerResponse
	60,  // 157: dpdkironcore.v1.DPDKironcore.DeleteLoadBalancer:output_type -> dpdkironcore.v1.DeleteLoadBalancerResponse
	62,  // 158: dpdkironcore.v1.DPDKironcore.CreateLoadBalancerTarget:output_type -> dpdkironcore.v1.CreateLoadBalancerTargetResponse
	64,  // 159: dpdkironcore.v1.DPDKironcore.ListLoadBalancerTargets:output_type -> dpdkironcore.v1.ListLoadBalancerTargetsResponse
	66,  // 160: dpdkironcore.v1.DPDKironcore.DeleteLoadBalancerTarget:output_type -> dpdkironcore.v1.DeleteLoadBalancerTargetResponse
	68,  // 161: dpdkironcore.v1.DPDKironcore.CreateNat:output_type -> dpdkironcore.v1.CreateNatResponse
	70,  // 162: dpdkironcore.v1.DPDKironcore.GetNat:output_type -> dpdkironcore.v1.GetNatResponse
	72,  // 163: dpdkironcore.v1.DPDKironcore.DeleteNat:output_type -> dpdkironcore.v1.DeleteNatResponse
	78,  // 164: dpdkironcore.v1.DPDKironcore.ListLocalNats:output_type -> dpdkironcore.v1.ListLocalNatsResponse
	74,  // 165: dpdkironcore.v1.DPDKironcore.CreateNeighborNat:output_type -> dpdkironcore.v1.CreateNeighborNatResponse
	76,  // 166: dpdkironcore.v1.DPDKironcore.DeleteNeighborNat:output_type -> dpdkironcore.v1.DeleteNeighborNatResponse
	80,  // 167: dpdkironcore.v1.DPDKironcore.ListNeighborNats:output_type -> dpdkironcore.v1.ListNeighborNatsResponse
	82,  // 168: dpdkironcore.v1.DPDKironcore.ListRoutes:output_type -> dpdkironcore.v1.ListRoutesResponse
	84,  // 169: dpdkironcore.v1.DPDKironcore.CreateRoute:output_type -> dpdkironcore.v1.CreateRouteResponse
	86,  // 170: dpdkironcore.v1.DPDKironcore.DeleteRoute:output_type -> dpdkironcore.v1.DeleteRouteResponse
	88,  // 171: dpdkironcore.v1.DPDKironcore.CheckVniInUse:output_type -> dpdkironcore.v1.CheckVniInUseResponse
	90,  // 172: dpdkironcore.v1.DPDKironcore.ResetVni:output_type -> dpdkironcore.v1.ResetVniResponse
	92,  // 173: dpdkironcore.v1.DPDKironcore.ListFirewallRules:output_type -> dpdkironcore.v1.ListFirewallRulesResponse
	94,  // 174: dpdkironcore.v1.DPDKironcore.CreateFirewallRule:output_type -> dpdkironcore.v1.CreateFirewallRuleResponse
	96,  // 175: dpdkironcore.v1.DPDKironcore.GetFirewallRule:output_type -> dpdkironcore.v1.GetFirewallRuleResponse
	98,  // 176: dpdkironcore.v1.DPDKironcore.DeleteFirewallRule:output_type -> dpdkironcore.v1.DeleteFirewallRuleResponse
	102, // 177: dpdkironcore.v1.DPDKironcore.CaptureStart:output_type -> dpdkironcore.v1.CaptureStartResponse
	104, // 178: dpdkironcore.v1.DPDKironcore.CaptureStop:output_type -> dpdkironcore.v1.CaptureStopResponse
	106, // 179: dpdkironcore.v1.DPDKironcore.CaptureStatus:output_type -> dpdkironcore.v1.CaptureStatusResponse
	139, // [139:180] is the sub-list for method output_type
	98,  // [98:139] is the sub-list for method input_type
	98,  // [98:98] is the sub-list for extension type_name
	98,  // [98:98] is the sub-list for extension extendee
	0,   // [0:98] is the sub-list for field type_name
}

func init() { file_proto_dpdk_proto_init() }
func file_proto_dpdk_proto_init() {
	if File_proto_dpdk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dpdk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PxeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LbPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NatEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcmpFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TcpFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UdpFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirewallRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInitializedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInitializedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInterfacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInterfacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInterfaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInterfaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInterfaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrefixesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrefixesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePrefixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePrefixResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePrefixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePrefixResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoadBalancerPrefixesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoadBalancerPrefixesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoadBalancerPrefixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoadBalancerPrefixResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLoadBalancerPrefixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLoadBalancerPrefixResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoadBalancerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoadBalancerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoadBalancerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoadBalancerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLoadBalancerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLoadBalancerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoadBalancerTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoadBalancerTargetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoadBalancerTargetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoadBalancerTargetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLoadBalancerTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLoadBalancerTargetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNeighborNatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNeighborNatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNeighborNatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNeighborNatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocalNatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocalNatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNeighborNatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNeighborNatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVniInUseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVniInUseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetVniRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetVniResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFirewallRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFirewallRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFirewallRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFirewallRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirewallRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirewallRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFirewallRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFirewallRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapturedInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureStopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dpdk_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_dpdk_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ProtocolFilter_Icmp)(nil),
		(*ProtocolFilter_Tcp)(nil),
		(*ProtocolFilter_Udp)(nil),
	}
	file_proto_dpdk_proto_msgTypes[92].OneofWrappers = []interface{}{
		(*CapturedInterface_VfName)(nil),
		(*CapturedInterface_PfIndex)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dpdk_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   100,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dpdk_proto_goTypes,
		DependencyIndexes: file_proto_dpdk_proto_depIdxs,
		EnumInfos:         file_proto_dpdk_proto_enumTypes,
		MessageInfos:      file_proto_dpdk_proto_msgTypes,
	}.Build()
	File_proto_dpdk_proto = out.File
	file_proto_dpdk_proto_rawDesc = nil
	file_proto_dpdk_proto_goTypes = nil
	file_proto_dpdk_proto_depIdxs = nil
}
